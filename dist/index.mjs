import e from"sade/lib/index.js";import t from"glob-promise/lib/index.js";import{watch as s,rollup as o}from"rollup";import r from"chalk/source/index.js";import n from"jest";import{CLIEngine as i}from"eslint/lib/api.js";import a from"chalk/source/index.js";import c,{extname as l,sep as p,resolve as m}from"path";import u from"execa/index.js";import d from"shelljs/shell.js";import f from"ora/index.js";import g from"semver/index.js";import h from"fs-extra/lib/index.js";import x from"camelcase/index.js";import y from"execa/index.js";import"ansi-escapes/index.js";import"ora/index.js";import{concatAllArray as w}from"jpjs/dist/jpjs.js";import j from"resolve.exports";import{terser as b}from"rollup-plugin-terser";import{DEFAULT_EXTENSIONS as v}from"@babel/core/lib/index.js";import E from"@rollup/plugin-commonjs/dist/index.js";import k from"@rollup/plugin-json/dist/index.js";import $ from"@rollup/plugin-node-resolve";import S from"rollup-plugin-sourcemaps";import C from"typescript/lib/typescript.js";import{parse as F}from"@babel/parser/lib/index.js";import D from"@babel/traverse/lib/index.js";import{pascalCase as J}from"pascal-case/dist/index.js";import{createConfigItem as O}from"@babel/core/lib/index.js";import{createBabelInputPluginFactory as R}from"@rollup/plugin-babel/dist/index.js";import P from"lodash.merge";import{optimizeLodashImports as M}from"@optimize-lodash/rollup-plugin/dist/index.js";import{existsSync as T,readFileSync as _}from"fs";import N from"tiny-glob/index.js";import*as z from"fs-extra/lib/index.js";import I from"fs-extra/lib/index.js";import q from"enquirer/lib/prompts/input.js";import A from"enquirer/lib/prompts/select.js";import B from"progress-estimator/src/index.js";import{stat as L}from"fs/promises";import{spawn as W}from"child_process";import"@babel/helper-module-imports/lib/index.js";const U=console.error.bind(console);function Y(e){const t=e.error||e,s=`${t.name?t.name+": ":""}${t.message||t}`,o=t.plugin?"rpt2"===t.plugin?`(typescript) ${s}`:`(${t.plugin} plugin) ${s}`:s;if(U(a.bold.red(o)),t.loc&&(U(),U(`at ${t.loc.file}:${t.loc.line}:${t.loc.column}`)),t.frame)U(),U(a.dim(t.frame));else if(e.stack){const e=t.stack.replace(o,"");U(a.dim(e))}U()}const Z=e=>x((e=>e.replace(/^@.*\//,""))(e).toLowerCase().replace(/((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,"")),V=e=>e.toLowerCase().replace(/(^@.*\/)|((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,""),K=h.realpathSync(process.cwd()),Q=function(e){return c.resolve(K,e)},G={appPackageJson:Q("package.json"),tsconfigJson:Q("tsconfig.json"),testsSetup:Q("test/setupTests.ts"),appRoot:Q("."),appSrc:Q("src"),appErrorsJson:Q("errors/codes.json"),appErrors:Q("errors"),appDist:Q("dist"),appConfig:Q("export-ts.config.js"),jestConfig:Q("jest.config.js"),progressEstimatorCache:Q("node_modules/.cache/.progress-estimator")};let H;async function X(){if(H)return H;try{await y("yarnpkg",["--version"]),H="yarn"}catch(e){H="npm"}return H}const ee=e=>a.bold(a.cyan(e)),te=async function(e){const t=await X(),s={install:"npm"===t?"npm install":"yarn install",build:"npm"===t?"npm run build":"yarn build",start:"npm"===t?"npm run start":"yarn start",test:"npm"===t?"npm test":"yarn test"};return`\n  ${r.green("Awesome!")} You're now ready to start coding.\n  \n  I already ran ${ee(s.install)} for you, so your next steps are:\n    ${ee(`cd ${e}`)}\n  \n  To start developing (rebuilds on changes):\n    ${ee(s.start)}\n  \n  To build for production:\n    ${ee(s.build)}\n\n  To test your library with Jest:\n    ${ee(s.test)}\n    \n  Questions? Feedback? Please let me know!\n  ${r.green("https://github.com/ctjlewis/export-ts/issues")}\n`},se=h.realpathSync(process.cwd()),oe=function(e){return c.resolve(se,e)},re={appPackageJson:oe("package.json"),tsconfigJson:oe("tsconfig.json"),testsSetup:oe("test/setupTests.ts"),appRoot:oe("."),appSrc:oe("src"),appErrorsJson:oe("errors/codes.json"),appErrors:oe("errors"),appDist:oe("dist"),appConfig:oe("export-ts.config.js"),jestConfig:oe("jest.config.js"),progressEstimatorCache:oe("node_modules/.cache/.progress-estimator")};function ne(e){const t={},s=Object.keys(e);for(const o of s)t[e[o]]=o;return t}function ie(e){switch(e.type){case"StringLiteral":case"Literal":return e.value;case"BinaryExpression":if("+"!==e.operator)throw new Error("Unsupported binary operator "+e.operator);return ie(e.left)+ie(e.right);default:throw new Error("Unsupported type "+e.type)}}const ae=h.realpathSync(process.cwd()),ce=function(e){return c.resolve(ae,e)},le={appPackageJson:ce("package.json"),tsconfigJson:ce("tsconfig.json"),testsSetup:ce("test/setupTests.ts"),appRoot:ce("."),appSrc:ce("src"),appErrorsJson:ce("errors/codes.json"),appErrors:ce("errors"),appDist:ce("dist"),appConfig:ce("export-ts.config.js"),jestConfig:ce("jest.config.js"),progressEstimatorCache:ce("node_modules/.cache/.progress-estimator")},pe={sourceType:"module",plugins:["classProperties","flow","jsx","trailingFunctionCommas","objectRestSpread"]};async function me(e){if(!e||!e.errorMapFilePath)throw new Error("Missing options. Ensure you pass an object with `errorMapFilePath`.");if(!e.name||!e.name)throw new Error("Missing options. Ensure you pass --name flag to export-ts");const t=e.errorMapFilePath;let s;try{const e=await h.readFile(t,"utf-8");s=JSON.parse(e)}catch(e){s={}}const o=Object.keys(s);let r;function n(e){const t=F(e,pe);D(t,{CallExpression:{exit(e){var t;e.get("callee").isIdentifier({name:"invariant"})&&(t=ie(e.node.arguments[1]),s.hasOwnProperty(t)||(s[t]=""+r++))}}})}return r=0===o.length?0:Math.max.apply(null,o)+1,s=ne(s),async function(o){n(o),await async function(){const o=J((e=>x((e=>e.replace(/^@.*\//,""))(e).toLowerCase().replace(/((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,"")))(e.name));await h.ensureDir(le.appErrors),await h.writeFile(t,JSON.stringify(ne(s),null,2)+"\n","utf-8"),await h.writeFile(le.appErrors+"/ErrorDev.js","\nfunction ErrorDev(message) {\n  const error = new Error(message);\n  error.name = 'Invariant Violation';\n  return error;\n}\n\nexport default ErrorDev;\n      ","utf-8"),await h.writeFile(le.appErrors+"/ErrorProd.js",`\nfunction ErrorProd(code) {\n  // TODO: replace this URL with yours\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return new Error(\n    \`Minified ${o} error #\${code}; visit \${url} for the full message or \` +\n      'use the non-minified dev environment for full errors and additional ' +\n      'helpful warnings. '\n  );\n}\n\nexport default ErrorProd;\n`,"utf-8")}()}}const ue=e=>!!e&&(e.constructor!==Object||Object.keys(e).length>0),de=[{original:"lodash(?!/fp)",replacement:"lodash-es"}],fe=(e,...t)=>{const s=[];return t.forEach((t=>{t.forEach((t=>{const o=s.findIndex((e=>e.file.resolved===t.file.resolved));-1!==o?s[o]=O([s[o].file.resolved,P(s[o].options,t.options)],{type:e}):s.push(t)}))})),s},ge=(e,t)=>t.map((({name:t,...s})=>O([require.resolve(t),s],{type:e}))),he=R((()=>({options:({custom:e,...t})=>({customOptions:e,pluginOptions:t}),config(e,{customOptions:t}){const s=ge("plugin",[{name:"babel-plugin-macros"},{name:"babel-plugin-annotate-pure-calls"},{name:"babel-plugin-dev-expression"},"cjs"!==t.format&&{name:"babel-plugin-transform-rename-import",replacements:de},{name:"babel-plugin-polyfill-regenerator",method:"usage-pure"},{name:"@babel/plugin-proposal-class-properties",loose:!0},ue(t.extractErrors)&&{name:"./errors/transformErrorMessages"}].filter(Boolean)),o=e.options||{};o.presets=o.presets||[];const r=o.presets.findIndex((e=>e.file.request.includes("@babel/preset-env")));if(-1!==r){const e=o.presets[r];o.presets[r]=O([e.file.resolved,P({loose:!0,targets:t.targets},e.options,{modules:!1})],{type:"preset"})}else{const e=ge("preset",[{name:"@babel/preset-env",targets:t.targets,modules:!1,loose:!0}]);o.presets=fe("preset",e,o.presets)}return o.plugins=fe("plugin",s,o.plugins||[]),o}})));function xe(e){const t=e.split("node_modules"),s=t[0];if(t.length<2)return null;const o=t[1].split(p),r=o[1].startsWith("@")?o.slice(1,3).join(p):o[1];return m(s,"node_modules",r,"package.json")}const ye=["react","react-native"],we={errorMapFilePath:re.appErrorsJson};let je={rollup:(e,t)=>e};async function be(e){const t=await N("dist/**/*.js"),s=w(t.map((t=>function(e,t){return[e.format.includes("cjs")&&{...e,format:"cjs",env:"development",input:t},e.format.includes("cjs")&&{...e,format:"cjs",env:"production",input:t},e.format.includes("esm")&&{...e,format:"esm",input:t},e.format.includes("umd")&&{...e,format:"umd",env:"development",input:t},e.format.includes("umd")&&{...e,format:"umd",env:"production",input:t},e.format.includes("system")&&{...e,format:"system",env:"development",input:t},e.format.includes("system")&&{...e,format:"system",env:"production",input:t}].filter(Boolean)}(e,t).map(((e,t)=>({...e,writeMeta:0===t}))))));return await Promise.all(s.map((async(e,t)=>{const s=await async function(e,t){const s=await me({...we,...e}),o=e.format.includes("es")||e.format.includes("esm"),r=void 0!==e.minify?e.minify:"production"===e.env||o;let n=["esm","cjs"].includes(e.format)?"":e.format,i="esm"===e.format?"mjs":"cjs";[`${re.appDist}/${V(e.name)}`,n,e.env,r?"min":"",i].filter(Boolean).join(".");const a=C.readConfigFile(e.tsconfig||re.tsconfigJson,C.sys.readFile).config,p=C.parseJsonConfigFileContent(a,C.sys,"./").options,m="production"===process.env.NODE_ENV,u=["esm"===e.format?".mjs":null,"cjs"===e.format?".cjs":null,".js"].filter(Boolean),d=e.input.replace(l(e.input),"");return{input:e.input,external:e=>!e.startsWith("regenerator-runtime")&&(!!ye.includes(e)||(e=>!e.startsWith(".")&&!c.isAbsolute(e))(e)),shimMissingExports:!0,treeshake:{propertyReadSideEffects:!1},output:{file:`${d}.${"esm"===e.format?"mjs":"cjs"}`,format:o?"es":e.format,freeze:!1,esModule:Boolean(p?.esModuleInterop)||o,name:e.name||Z(e.name),sourcemap:!0,globals:{react:"React","react-native":"ReactNative","lodash-es":"lodashEs","lodash/fp":"lodashFp"},exports:"named"},plugins:[e.extractErrors&&{name:"Extract errors",async transform(e){try{await s(e)}catch(e){return null}return{code:e,map:null}}},$({modulesOnly:!0,browser:"node"!==e.target,extensions:[".jsx",".json",".node"]}),E({extensions:[".js",".cjs",".mjs"],esmExternals:!0,requireReturnsDefault:!0,transformMixedEsModules:!0,include:"umd"===e.format||o?/\/node_modules\//:/\/regenerator-runtime\//}),k(),{name:"Remove shebang",transform:e=>({code:e=e.replace(/^#!(.*)/,""),map:null})},e.legacy&&he({exclude:"node_modules/**",extensions:[...v,"ts","tsx"],passPerPreset:!0,custom:{targets:{..."node"===e.target?{node:14}:{},esmodules:o},extractErrors:e.extractErrors,format:e.format},babelHelpers:"bundled"}),S(),r&&b({format:{keep_quoted_props:!0,comments:!1},compress:{keep_infinity:!0,pure_getters:!0,passes:10},ecma:e.legacy?5:2020,module:o,toplevel:"cjs"===e.format||o}),M({useLodashEs:o||void 0}),e.env&&{name:"Ensure default exports",renderChunk:async(e,t)=>({code:e.replace(/process\.env\.NODE_ENV(?!\s*=)/g,JSON.stringify(m?"production":"development")),map:null})},!e.legacy&&M({useLodashEs:o||void 0}),{name:"Resolve final runtime imports to files",renderChunk:async(t,s)=>{for(const o of s.imports){if(l(o))continue;let s=require.resolve(o);const r=l(s),n=s.replace(r,"");if("esm"===e.format||"cjs"===e.format)for(const e of u){const t=n+e;if(T(t)){s=t;break}}const i=xe(s);if(!i||!T(i))continue;const a=_(i,"utf-8"),c=JSON.parse(a);if(j.resolve(c,o))continue;const p=s.slice(s.indexOf(o)),m=new RegExp(`(from|require\\()\\s*['"]${o.replace(".","\\.")}['"]`,"g"),d=t.match(m)??[];for(const e of d){const s=e.replace(o,p);t=t.replace(e,s)}}return{code:t,map:null}}},{name:"Ensure default exports",renderChunk:async(e,t)=>t.exports.includes("default")||!o?null:{code:`${e}\nexport default {};`,map:null}}]}}(e);return je.rollup(s,e)})))}function ve(e,t){return{transform:{".(ts|tsx)$":require.resolve("ts-jest/dist"),".(js|jsx)$":require.resolve("babel-jest")},transformIgnorePatterns:["[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"],moduleFileExtensions:["ts","tsx","js","jsx","json","node"],collectCoverageFrom:["src/**/*.{ts,tsx,js,jsx}"],testMatch:["<rootDir>/**/*.(spec|test).{ts,tsx,js,jsx}"],testURL:"http://localhost",rootDir:t,watchPlugins:[require.resolve("jest-watch-typeahead/filename"),require.resolve("jest-watch-typeahead/testname")]}}async function Ee(){return await I.ensureDir(re.progressEstimatorCache),B({storagePath:re.progressEstimatorCache})}T(re.appConfig)&&(je=require(re.appConfig));var ke={name:"basic",dependencies:["husky","export-ts","tslib","typescript","size-limit","@size-limit/preset-small-lib"],packageJson:{version:"0.1.0",license:"MIT",main:"./dist/index.cjs",module:"./dist/index.mjs",exports:{"./package.json":"./package.json",".":{import:"./dist/index.mjs",require:"./dist/index.cjs"}},typings:"dist/index.d.ts",files:["dist","src"],engines:{node:">=14"},scripts:{start:"export-ts watch",build:"export-ts build",test:"export-ts test",posttest:"node test/import.mjs && node test/require.cjs",lint:"export-ts lint",prepare:"export-ts build",size:"size-limit",analyze:"size-limit --why"},peerDependencies:{},husky:{hooks:{"pre-commit":"export-ts lint"}},prettier:{printWidth:80,semi:!0,singleQuote:!0,trailingComma:"es5"}}};const $e={name:"react",dependencies:[...ke.dependencies,"@types/react","@types/react-dom","react","react-dom"],packageJson:{...ke.packageJson,peerDependencies:{react:">=16"},scripts:{...ke.packageJson.scripts,test:"export-ts test"}}},Se={basic:{name:"basic",dependencies:["husky","export-ts","tslib","typescript","size-limit","@size-limit/preset-small-lib"],packageJson:{version:"0.1.0",license:"MIT",main:"./dist/index.cjs",module:"./dist/index.mjs",exports:{"./package.json":"./package.json",".":{import:"./dist/index.mjs",require:"./dist/index.cjs"}},typings:"dist/index.d.ts",files:["dist","src"],engines:{node:">=14"},scripts:{start:"export-ts watch",build:"export-ts build",test:"export-ts test",posttest:"node test/import.mjs && node test/require.cjs",lint:"export-ts lint",prepare:"export-ts build",size:"size-limit",analyze:"size-limit --why"},peerDependencies:{},husky:{hooks:{"pre-commit":"export-ts lint"}},prettier:{printWidth:80,semi:!0,singleQuote:!0,trailingComma:"es5"}}},react:$e,"react-with-storybook":{dependencies:[...$e.dependencies,"@babel/core","@storybook/addon-essentials","@storybook/addon-links","@storybook/addon-info","@storybook/addons","@storybook/react","react-is","babel-loader"],name:"react-with-storybook",packageJson:{...$e.packageJson,scripts:{...$e.packageJson.scripts,storybook:"start-storybook -p 6006","build-storybook":"build-storybook"}}}},Ce=h.realpathSync(process.cwd()),Fe=function(e){return c.resolve(Ce,e)};Fe("package.json"),Fe("tsconfig.json"),Fe("test/setupTests.ts"),Fe("."),Fe("src"),Fe("errors/codes.json"),Fe("errors"),Fe("dist"),Fe("export-ts.config.js"),Fe("jest.config.js"),Fe("node_modules/.cache/.progress-estimator");const De=e("export-ts");let Je;try{Je=JSON.parse(_(G.appPackageJson,"utf-8"))}catch(ke){}const Oe=e=>L(e).then((e=>e.isDirectory())).catch((()=>!1)),Re=e=>L(e).then((e=>e.isFile())).catch((()=>!1));async function Pe(e,s){let o=[];if(e)Array.isArray(e)?o.push(...e):o.push(e);else if(s){const e=Q(s);o.push(e)}else if(await Oe(Q("src"))){const e=await async function(e){const t=await Re(Q("src/index.ts"))?".ts":await Re(Q("src/index.tsx"))?".tsx":await Re(Q("src/index.jsx"))?".jsx":".js";return Q(`src/index${t}`)}();o.push(e)}const r=o.map((async e=>await t(e)));return(await Promise.all(r)).flat()}async function Me(e){return{...e,name:e.name||Je.name,input:await Pe(e.entry,Je.source),format:e.format.split(",").map((e=>"es"===e?"esm":e))}}async function Te(){const e=await Ee(),s=await t(`${G.appDist}/**/*.js`);await e(Promise.all(s.map((async e=>await I.unlink(e)))),"Removing original emitted TypeScript output (dist/**/*.js).")}async function _e(){await I.remove(G.appDist)}function Ne(e){const t=`#!/usr/bin/env node\n\n'use strict';\nmodule.exports = require('./${V(e)}.production.min.cjs');\n`;return I.outputFile(c.join(G.appDist,"index.cjs"),t)}function ze(e){const t=`#!/usr/bin/env node\n\nexport { default } from './${e}.min.mjs';\nexport * from './${e}.min.mjs';\n`;return I.outputFile(c.join(G.appDist,"index.mjs"),t)}function Ie(e){d.exec(`npm config set init-author-name "${e}"`,{silent:!0})}De.command("create <pkg>").describe("Create a new package with ").example("create mypackage").option("--template",`Specify a template. Allowed choices: [${Object.keys(Se).join(", ")}]`).example("create --template react mypackage").action((async(e,t)=>{console.log(r.blue("\n::::::::::: ::::::::  :::::::::  :::    :::\n    :+:    :+:    :+: :+:    :+: :+:    :+:\n    +:+    +:+        +:+    +:+  +:+  +:+\n    +#+    +#++:++#++ +#+    +:+   +#++:+\n    +#+           +#+ +#+    +#+  +#+  +#+\n    #+#    #+#    #+# #+#    #+# #+#    #+#\n    ###     ########  #########  ###    ###\n"));const s=f(`Creating ${r.bold.green(e)}...`);let o;try{const i=await I.realpath(process.cwd());let a=await async function t(o){if(!await I.pathExists(o))return o;s.fail(`Failed to create ${r.bold.red(e)}`);const n=new q({message:`A folder named ${r.bold.red(e)} already exists! ${r.bold("Choose a different name")}`,initial:e+"-1",result:e=>e.trim()});return e=await n.run(),o=await I.realpath(process.cwd())+"/"+e,s.start(`Creating ${r.bold.green(e)}...`),await t(o)}(i+"/"+e);const l=new A({message:"Choose a template",choices:Object.keys(Se)});t.template?(o=t.template.trim(),l.choices.includes(o)||(s.fail(`Invalid template ${r.bold.red(o)}`),o=await l.run())):o=await l.run(),s.start(),await I.copy(c.resolve(__dirname,`../templates/${o}`),a,{overwrite:!0}),await I.move(c.resolve(a,"./gitignore"),c.resolve(a,"./.gitignore"));let p=await I.readFile(c.resolve(a,"LICENSE"),{encoding:"utf-8"});p=p.replace(/<year>/,`${(new Date).getFullYear()}`);let m=function(){let e="";return e=d.exec("npm config get init-author-name",{silent:!0}).stdout.trim(),e||(e=d.exec("git config --global user.name",{silent:!0}).stdout.trim(),e?(Ie(e),e):(e=d.exec("npm config get init-author-email",{silent:!0}).stdout.trim(),e||(e=d.exec("git config --global user.email",{silent:!0}).stdout.trim(),e||e)))}();if(!m){s.stop();const e=new q({name:"author",message:"Who is the package author?"});m=await e.run(),Ie(m),s.start()}p=p.replace(/<author>/,m.trim()),await I.writeFile(c.resolve(a,"LICENSE"),p,{encoding:"utf-8"});const u=(e=>({name:t,author:s})=>({...e.packageJson,name:t,author:s,"size-limit":[{path:`dist/${t}.production.min.cjs`,limit:"10 KB"},{path:`dist/${t}.min.mjs`,limit:"10 KB"}]}))(Se[o]);process.chdir(a);const f=u({name:V(e),author:m}),h=function({engines:e}){return e&&e.node}(f);h&&!g.satisfies(process.version,h)&&(s.fail((n=h,`Unsupported Node version! Your current Node version (${r.red(process.version)}) does not satisfy the requirement of Node ${r.cyan(n)}.`)),process.exit(1)),await I.outputJSON(c.resolve(a,"package.json"),f),s.succeed(`Created ${r.bold.green(e)}`),await te(e)}catch(t){s.fail(`Failed to create ${r.bold.red(e)}`),Y(t),process.exit(1)}var n;const i=Se[o],{dependencies:a}=i,l=f((p=a.sort(),`Installing dependencies:\n\n${p.map((e=>((e,t=1)=>`${" ".repeat(2*t)}${e}`)(`${r.cyan(r.bold(e))}`,2))).join("\n")}\n\n`)).start();var p;try{const t=await X();await u(t,function(e,t){switch(e){case"npm":return["install",...t,"--save-dev"];case"yarn":return["add",...t,"--dev"]}}(t,a)),l.succeed("Installed dependencies"),console.log(await te(e))}catch(e){l.fail("Failed to install dependencies"),Y(e),process.exit(1)}})),De.command("watch").describe("Rebuilds on any change").option("--entry, -i","Entry module").example("watch --entry src/foo.tsx").option("--target","Specify your target environment","browser").example("watch --target node").option("--name","Specify name exposed in UMD builds").example("watch --name Foo").option("--format","Specify module format(s)","cjs,esm").example("watch --format cjs,esm").option("--verbose","Keep outdated console output in watch mode instead of clearing the screen").example("watch --verbose").option("--noClean","Don't clean the dist folder").example("watch --noClean").option("--tsconfig","Specify custom tsconfig path").example("watch --tsconfig ./tsconfig.foo.json").option("--onFirstSuccess","Run a command on the first successful build").example('watch --onFirstSuccess "echo The first successful build!"').option("--onSuccess","Run a command on a successful build").example('watch --onSuccess "echo Successful build!"').option("--onFailure","Run a command on a failed build").example('watch --onFailure "The build failed!"').option("--transpileOnly","Skip type checking").example("watch --transpileOnly").option("--extractErrors","Extract invariant errors to ./errors/codes.json.").example("watch --extractErrors").action((async e=>{const t=await Me(e),o=await be(t);t.noClean||await _e(),t.format.includes("cjs")&&await Ne(t.name),t.format.includes("esm")&&await ze(t.name),await Te();let n=!0,i=null,a=null;function c(e){if(!e)return null;const[t,...s]=e.split(" ");return u(t,s,{stdio:"inherit"})}const l=f().start();s(o.map((e=>({watch:{silent:!0,include:["src/**"],exclude:["node_modules/**"]},...e})))).on("event",(async e=>{if(await Promise.all([i?i.kill("SIGTERM"):null,a?a.kill("SIGTERM"):null]),"START"===e.code&&(t.verbose||process.stdout.write("win32"===process.platform?"[2J[0f":"[2J[3J[H"),l.start(r.bold.cyan("Compiling modules..."))),"ERROR"===e.code&&(l.fail(r.bold.red("Failed to compile")),Y(e.error),a=c(t.onFailure)),"END"===e.code){l.succeed(r.bold.green("Compiled successfully")),console.log(`\n  ${r.dim("Watching for changes")}\n`);try{await async function(){const e=re.appDist+"/src";await z.pathExists(e)&&(console.warn('[export-ts]: Your rootDir is currently set to "./". Please change your rootDir to "./src".\nexport-ts has deprecated setting tsconfig.compilerOptions.rootDir to "./" as it caused buggy output for declarationMaps and more.\nYou may also need to change your include to remove "test", which also caused declarations to be unnecessarily created for test files.'),await z.copy(e,re.appDist,{overwrite:!0}),await z.remove(e))}(),n&&t.onFirstSuccess?(n=!1,c(t.onFirstSuccess)):i=c(t.onSuccess)}catch(e){}}}))})),De.command("build").describe("Build your project once and exit").option("--entry, -i","Entry module").example("build --entry src/foo.tsx").option("--target","Specify your target environment","browser").example("build --target node").option("--name","Specify name exposed in UMD builds").example("build --name Foo").option("--format","Specify module format(s)","cjs,esm").example("build --format cjs,esm").option("--legacy","Babel transpile and emit ES5.").example("build --legacy").option("--tsconfig","Specify custom tsconfig path").example("build --tsconfig ./tsconfig.foo.json").option("--transpileOnly","Skip type checking").example("build --transpileOnly").option("--extractErrors","Extract errors to ./errors/codes.json and provide a url for decoding.").example("build --extractErrors=https://reactjs.org/docs/error-decoder.html?invariant=").action((async e=>{const t=await Me(e);console.log("> Cleaning dist/ and compiling TS."),await _e(),await async function({transpileOnly:e=!1,watch:t=!1}={}){const s=`--rootDir src/ --outDir dist/ --noEmit false --strict ${e}`.split(" ");console.log(`> Command: tsc ${s.join(" ")}`);const o=await Ee();await o(new Promise((e=>{W("tsc",s,{stdio:"inherit"}).on("exit",(t=>{if(0!==t)throw Error("TypeScript build failed");e(void 0)}))})),"TS ➡ JS: Compiling with TSC"),t&&W("tsc",[...s,"--watch","--preserveWatchOutput"],{stdio:"inherit"})}();const s=await be(t),r=await Ee();t.format.includes("cjs")&&await r(Ne(t.name).catch(Y),"Creating CJS entry file"),t.format.includes("esm")&&await r(ze(t.name).catch(Y),"Creating MJS entry file");try{await r(Promise.all(s.map((async e=>{const t=await o(e);await t.write(e.output)}))),"JS ➡ JS: Compressing and transforming emitted TypeScript output."),await Te()}catch(e){Y(e),process.exit(1)}})),De.command("test").describe("Run jest test runner. Passes through all flags directly to Jest").action((async e=>{process.env.BABEL_ENV="test",process.env.NODE_ENV="test",process.on("unhandledRejection",(e=>{throw e}));const t=process.argv.slice(2);let s={...ve(0,e.config?c.dirname(e.config):G.appRoot),...Je.jest};const o=await I.pathExists(G.jestConfig);if(e.config||o){const t=Q(e.config||G.jestConfig),o=require(t);s={...s,...o}}if(e.config){let e=t.indexOf("--config");if(-1!==e)t.splice(e,2);else{const s=/--config=.+/;e=t.findIndex((e=>e.match(s))),-1!==e&&t.splice(e,1)}}t.push("--config",JSON.stringify({...s}));const[,...r]=t;n.run(r)})),De.command("lint").describe("Run eslint with Prettier").example("lint src test").option("--fix","Fixes fixable errors and warnings").example("lint src test --fix").option("--ignore-pattern","Ignore a pattern").example("lint src test --ignore-pattern test/foobar.ts").option("--max-warnings","Exits with non-zero error code if number of warnings exceed this number",Infinity).example("lint src test --max-warnings 10").option("--write-file","Write the config file locally").example("lint --write-file").option("--report-file","Write JSON report to file locally").example("lint --report-file eslint-report.json").action((async e=>{if(0===e._.length&&!e["write-file"]){const t=["src","test"].filter(I.existsSync);e._=t,console.log(r.yellow(`Defaulting to "export-ts lint ${t.join(" ")}"`,'\nYou can override this in the package.json scripts, like "lint": "export-ts lint src otherDir"'))}const t=await async function({pkg:e,rootDir:t,writeFile:s}){const o={extends:["react-app","prettier/@typescript-eslint","plugin:prettier/recommended"],settings:{react:{version:Boolean(function({dependencies:e,devDependencies:t}){return e&&e.react||t&&t.react}(e))?"detect":"999.999.999"}}};if(!s)return o;const r=c.join(t,".eslintrc.js");try{await I.writeFile(r,`module.exports = ${JSON.stringify(o,null,2)}`,{flag:"wx"})}catch(e){return"EEXIST"===e.code?console.error("Error trying to save the Eslint configuration file:",`${r} already exists.`):console.error(e),o}}({pkg:Je,rootDir:G.appRoot,writeFile:e["write-file"]}),s=new i({baseConfig:{...t,...Je.eslint},extensions:[".ts",".tsx",".js",".jsx"],fix:e.fix,ignorePattern:e["ignore-pattern"]}),o=s.executeOnFiles(e._);e.fix&&i.outputFixes(o),console.log(s.getFormatter()(o.results)),e["report-file"]&&await I.outputFile(e["report-file"],s.getFormatter("json")(o.results)),o.errorCount&&process.exit(1),o.warningCount>e["max-warnings"]&&process.exit(1)})),De.parse(process.argv);export{Oe as isDir,Re as isFile};
export default {};
//# sourceMappingURL=index.mjs.map
