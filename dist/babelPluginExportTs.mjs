import{createConfigItem as e}from"@babel/core/lib/index.js";import{createBabelInputPluginFactory as s}from"@rollup/plugin-babel/dist/index.js";import r from"lodash.merge";const o=e=>!!e&&(e.constructor!==Object||Object.keys(e).length>0),t=[{original:"lodash(?!/fp)",replacement:"lodash-es"}],n=(s,...o)=>{const t=[];return o.forEach((o=>{o.forEach((o=>{const n=t.findIndex((e=>e.file.resolved===o.file.resolved));-1!==n?t[n]=e([t[n].file.resolved,r(t[n].options,o.options)],{type:s}):t.push(o)}))})),t},l=(s,r)=>r.map((({name:r,...o})=>e([require.resolve(r),o],{type:s}))),p=s((()=>({options:({custom:e,...s})=>({customOptions:e,pluginOptions:s}),config(s,{customOptions:p}){const a=l("plugin",[{name:"babel-plugin-macros"},{name:"babel-plugin-annotate-pure-calls"},{name:"babel-plugin-dev-expression"},"cjs"!==p.format&&{name:"babel-plugin-transform-rename-import",replacements:t},{name:"babel-plugin-polyfill-regenerator",method:"usage-pure"},{name:"@babel/plugin-proposal-class-properties",loose:!0},o(p.extractErrors)&&{name:"./errors/transformErrorMessages"}].filter(Boolean)),i=s.options||{};i.presets=i.presets||[];const m=i.presets.findIndex((e=>e.file.request.includes("@babel/preset-env")));if(-1!==m){const s=i.presets[m];i.presets[m]=e([s.file.resolved,r({loose:!0,targets:p.targets},s.options,{modules:!1})],{type:"preset"})}else{const e=l("preset",[{name:"@babel/preset-env",targets:p.targets,modules:!1,loose:!0}]);i.presets=n("preset",e,i.presets)}return i.plugins=n("plugin",a,i.plugins||[]),i}})));export{p as babelPluginExportTs,l as createConfigItems,o as isTruthy,n as mergeConfigItems};
export default {};
//# sourceMappingURL=babelPluginExportTs.mjs.map
