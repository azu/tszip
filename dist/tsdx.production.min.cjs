"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("sade/lib/index.js"),t=require("tiny-glob/sync.js"),r=require("rollup"),n=require("asyncro/dist/asyncro.js"),s=require("chalk/source/index.js"),o=require("jest"),a=require("eslint/lib/api.js"),i=require("path"),l=require("execa/index.js"),c=require("shelljs/shell.js"),u=require("ora/index.js"),p=require("semver/index.js"),d=require("fs-extra/lib/index.js"),m=require("camelcase/index.js");require("ansi-escapes/index.js");var f=require("jpjs/dist/jpjs.js"),g=require("resolve.exports"),y=require("rollup-plugin-terser"),h=require("@babel/core/lib/index.js"),x=require("@rollup/plugin-commonjs/dist/index.js"),w=require("@rollup/plugin-json/dist/index.js"),b=require("@rollup/plugin-replace/dist/rollup-plugin-replace.cjs.js"),j=require("@rollup/plugin-node-resolve"),v=require("rollup-plugin-sourcemaps"),E=require("rollup-plugin-typescript2/dist/rollup-plugin-typescript2.cjs.js"),k=require("typescript/lib/typescript.js"),q=require("@babel/parser/lib/index.js"),$=require("@babel/traverse/lib/index.js"),S=require("pascal-case/dist/index.js"),F=require("@rollup/plugin-babel/dist/index.js"),O=require("lodash.merge"),C=require("@optimize-lodash/rollup-plugin/dist/index.js"),D=require("fs"),J=require("enquirer/lib/prompts/input.js"),I=require("enquirer/lib/prompts/select.js"),_=require("progress-estimator/src/index.js"),N=require("fs/promises");function P(e){return e&&"object"==typeof e&&"default"in e?e:{"default":e}}function R(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,t}require("@babel/helper-module-imports/lib/index.js");var M=P(e),T=P(t),z=P(n),A=P(s),B=P(o),L=P(i),U=P(l),W=P(c),V=P(u),Y=P(p),X=P(d),Z=R(d),K=P(m),G=P(g),H=P(x),Q=P(w),ee=P(b),te=P(j),re=P(v),ne=P(E),se=P(k),oe=P($),ae=P(O),ie=P(J),le=P(I),ce=P(_);const ue=console.error.bind(console);function pe(e){const t=e.error||e,r=`${t.name?t.name+": ":""}${t.message||t}`,n=t.plugin?"rpt2"===t.plugin?`(typescript) ${r}`:`(${t.plugin} plugin) ${r}`:r;if(ue(A.default.bold.red(n)),t.loc&&(ue(),ue(`at ${t.loc.file}:${t.loc.line}:${t.loc.column}`)),t.frame)ue(),ue(A.default.dim(t.frame));else if(e.stack){const e=t.stack.replace(n,"");ue(A.default.dim(e))}ue()}const de=e=>K.default((e=>e.replace(/^@.*\//,""))(e).toLowerCase().replace(/((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,"")),me=e=>e.toLowerCase().replace(/(^@.*\/)|((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,""),fe=X.default.realpathSync(process.cwd()),ge=function(e){return L.default.resolve(fe,e)},ye={appPackageJson:ge("package.json"),tsconfigJson:ge("tsconfig.json"),testsSetup:ge("test/setupTests.ts"),appRoot:ge("."),appSrc:ge("src"),appErrorsJson:ge("errors/codes.json"),appErrors:ge("errors"),appDist:ge("dist"),appConfig:ge("tsdx.config.js"),jestConfig:ge("jest.config.js"),progressEstimatorCache:ge("node_modules/.cache/.progress-estimator")};let he;async function xe(){if(he)return he;try{await U.default("yarnpkg",["--version"]),he="yarn"}catch(e){he="npm"}return he}const we=e=>A.default.bold(A.default.cyan(e)),be=async function(e){const t=await xe(),r={install:"npm"===t?"npm install":"yarn install",build:"npm"===t?"npm run build":"yarn build",start:"npm"===t?"npm run start":"yarn start",test:"npm"===t?"npm test":"yarn test"};return`\n  ${A.default.green("Awesome!")} You're now ready to start coding.\n  \n  I already ran ${we(r.install)} for you, so your next steps are:\n    ${we(`cd ${e}`)}\n  \n  To start developing (rebuilds on changes):\n    ${we(r.start)}\n  \n  To build for production:\n    ${we(r.build)}\n\n  To test your library with Jest:\n    ${we(r.test)}\n    \n  Questions? Feedback? Please let me know!\n  ${A.default.green("https://github.com/formium/tsdx/issues")}\n`};function je(e){const t={},r=Object.keys(e);for(const n of r)t[e[n]]=n;return t}function ve(e){switch(e.type){case"StringLiteral":case"Literal":return e.value;case"BinaryExpression":if("+"!==e.operator)throw new Error("Unsupported binary operator "+e.operator);return ve(e.left)+ve(e.right);default:throw new Error("Unsupported type "+e.type)}}const Ee={sourceType:"module",plugins:["classProperties","flow","jsx","trailingFunctionCommas","objectRestSpread"]};async function ke(e){if(!e||!e.errorMapFilePath)throw new Error("Missing options. Ensure you pass an object with `errorMapFilePath`.");if(!e.name||!e.name)throw new Error("Missing options. Ensure you pass --name flag to tsdx");const t=e.errorMapFilePath;let r;try{const e=await X.default.readFile(t,"utf-8");r=JSON.parse(e)}catch(e){r={}}const n=Object.keys(r);let s;function o(e){const t=q.parse(e,Ee);oe.default(t,{CallExpression:{exit(e){var t;e.get("callee").isIdentifier({name:"invariant"})&&(t=ve(e.node.arguments[1]),r.hasOwnProperty(t)||(r[t]=""+s++))}}})}return s=0===n.length?0:Math.max.apply(null,n)+1,r=je(r),async function(n){o(n),await async function(){const n=S.pascalCase(de(e.name));await X.default.ensureDir(ye.appErrors),await X.default.writeFile(t,JSON.stringify(je(r),null,2)+"\n","utf-8"),await X.default.writeFile(ye.appErrors+"/ErrorDev.js","\nfunction ErrorDev(message) {\n  const error = new Error(message);\n  error.name = 'Invariant Violation';\n  return error;\n}\n\nexport default ErrorDev;\n      ","utf-8"),await X.default.writeFile(ye.appErrors+"/ErrorProd.js",`\nfunction ErrorProd(code) {\n  // TODO: replace this URL with yours\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return new Error(\n    \`Minified ${n} error #\${code}; visit \${url} for the full message or \` +\n      'use the non-minified dev environment for full errors and additional ' +\n      'helpful warnings. '\n  );\n}\n\nexport default ErrorProd;\n`,"utf-8")}()}}const qe=[{original:"lodash(?!/fp)",replacement:"lodash-es"}],$e=(e,...t)=>{const r=[];return t.forEach((t=>{t.forEach((t=>{const n=r.findIndex((e=>e.file.resolved===t.file.resolved));-1!==n?r[n]=h.createConfigItem([r[n].file.resolved,ae.default(r[n].options,t.options)],{type:e}):r.push(t)}))})),r},Se=(e,t)=>t.map((({name:t,...r})=>h.createConfigItem([require.resolve(t),r],{type:e}))),Fe=F.createBabelInputPluginFactory((()=>({options:({custom:e,...t})=>({customOptions:e,pluginOptions:t}),config(e,{customOptions:t}){const r=Se("plugin",[{name:"babel-plugin-macros"},{name:"babel-plugin-annotate-pure-calls"},{name:"babel-plugin-dev-expression"},"cjs"!==t.format&&{name:"babel-plugin-transform-rename-import",replacements:qe},{name:"babel-plugin-polyfill-regenerator",method:"usage-pure"},{name:"@babel/plugin-proposal-class-properties",loose:!0},(n=t.extractErrors,!!n&&(n.constructor!==Object||Object.keys(n).length>0)&&{name:"./errors/transformErrorMessages"})].filter(Boolean));var n;const s=e.options||{};s.presets=s.presets||[];const o=s.presets.findIndex((e=>e.file.request.includes("@babel/preset-env")));if(-1!==o){const e=s.presets[o];s.presets[o]=h.createConfigItem([e.file.resolved,ae.default({loose:!0,targets:t.targets},e.options,{modules:!1})],{type:"preset"})}else{const e=Se("preset",[{name:"@babel/preset-env",targets:t.targets,modules:!1,loose:!0}]);s.presets=$e("preset",e,s.presets)}return s.plugins=$e("plugin",r,s.plugins||[]),s}})));function Oe(e){const t=e.split("node_modules"),r=t[0];if(t.length<2)return null;const n=t[1].split(i.sep),s=n[1].startsWith("@")?n.slice(1,3).join(i.sep):n[1];return i.resolve(r,"node_modules",s,"package.json")}const Ce=["react","react-native"],De={errorMapFilePath:ye.appErrorsJson};let Je={},Ie={rollup:(e,t)=>e};async function _e(e){const t=f.concatAllArray(e.input.map((t=>function(e,t){return[e.format.includes("cjs")&&{...e,format:"cjs",env:"development",input:t},e.format.includes("cjs")&&{...e,format:"cjs",env:"production",input:t},e.format.includes("esm")&&{...e,format:"esm",input:t},e.format.includes("umd")&&{...e,format:"umd",env:"development",input:t},e.format.includes("umd")&&{...e,format:"umd",env:"production",input:t},e.format.includes("system")&&{...e,format:"system",env:"development",input:t},e.format.includes("system")&&{...e,format:"system",env:"production",input:t}].filter(Boolean)}(e,t).map(((e,t)=>({...e,writeMeta:0===t}))))));return await Promise.all(t.map((async(e,t)=>{const r=await async function(e,t){const r=await ke({...De,...e}),n=e.format.includes("es")||e.format.includes("esm"),s=void 0!==e.minify?e.minify:"production"===e.env||n;let o=["esm","cjs"].includes(e.format)?"":e.format,a="esm"===e.format?"mjs":"cjs";const l=[`${ye.appDist}/${me(e.name)}`,o,e.env,s?"min":"",a].filter(Boolean).join("."),c=se.default.readConfigFile(e.tsconfig||ye.tsconfigJson,se.default.sys.readFile).config,u=se.default.parseJsonConfigFileContent(c,se.default.sys,"./").options,{PRODUCTION:p}=process.env,d=["esm"===e.format?".mjs":null,"cjs"===e.format?".cjs":null,".js"].filter(Boolean);return{input:e.input,external:e=>!e.startsWith("regenerator-runtime")&&(!!Ce.includes(e)||(e=>!e.startsWith(".")&&!L.default.isAbsolute(e))(e)),shimMissingExports:!0,treeshake:{propertyReadSideEffects:!1},output:{file:l,format:n?"es":e.format,freeze:!1,esModule:Boolean(u?.esModuleInterop)||n,name:e.name||de(e.name),sourcemap:!0,globals:{react:"React","react-native":"ReactNative","lodash-es":"lodashEs","lodash/fp":"lodashFp"},exports:"named"},plugins:[e.extractErrors&&{name:"Extract errors",async transform(e){try{await r(e)}catch(e){return null}return{code:e,map:null}}},te.default({modulesOnly:!0,browser:"node"!==e.target,extensions:[".jsx",".json",".node"]}),H.default({extensions:[".js",".cjs",".mjs"],esmExternals:!0,requireReturnsDefault:!0,transformMixedEsModules:!0,include:"umd"===e.format||n?/\/node_modules\//:/\/regenerator-runtime\//}),Q.default(),{name:"Remove shebang",transform(t){let r=/^#!(.*)/,n=t.match(r);return Je[e.name]=n?"#!"+n[1]:"",{code:t=t.replace(r,""),map:null}}},ne.default({typescript:se.default,tsconfig:e.tsconfig,tsconfigDefaults:{exclude:["**/*.spec.ts","**/*.test.ts","**/*.spec.tsx","**/*.test.tsx","node_modules","bower_components","jspm_packages",ye.appDist],compilerOptions:{sourceMap:!0,declaration:!0,jsx:"react"}},tsconfigOverride:{compilerOptions:{module:"esnext",target:"esnext",...t>0?{declaration:!1,declarationMap:!1}:{}}},check:!e.transpileOnly&&0===t,useTsconfigDeclarationDir:Boolean(u?.declarationDir)}),e.legacy&&Fe({exclude:"node_modules/**",extensions:[...h.DEFAULT_EXTENSIONS,"ts","tsx"],passPerPreset:!0,custom:{targets:{..."node"===e.target?{node:14}:{},esmodules:n},extractErrors:e.extractErrors,format:e.format},babelHelpers:"bundled"}),re.default(),s&&y.terser({format:{keep_quoted_props:!0,comments:!1},compress:{keep_infinity:!0,pure_getters:!0,passes:10},ecma:e.legacy?5:2020,module:n,toplevel:"cjs"===e.format||n}),C.optimizeLodashImports({useLodashEs:n||void 0}),e.env&&ee.default({preventAssignment:!0,"process.env.NODE_ENV":JSON.stringify(p?"production":"development")}),!e.legacy&&C.optimizeLodashImports({useLodashEs:n||void 0}),{name:"Resolve final runtime imports to files",renderChunk:async(t,r)=>{for(const n of r.imports){if(i.extname(n))continue;let r=require.resolve(n);const s=i.extname(r),o=r.replace(s,"");if("esm"===e.format||"cjs"===e.format)for(const e of d){const t=o+e;if(D.existsSync(t)){r=t;break}}const a=Oe(r);if(!a||!D.existsSync(a))continue;const l=D.readFileSync(a,"utf-8"),c=JSON.parse(l);if(G.default.resolve(c,n))continue;const u=r.slice(r.indexOf(n)),p=new RegExp(`(from|require\\()\\s*['"]${n.replace(".","\\.")}['"]`,"g"),m=t.match(p)??[];for(const e of m){const r=e.replace(n,u);t=t.replace(e,r)}}return{code:t,map:null}}},{name:"Ensure default exports",renderChunk:async(e,t)=>t.exports.includes("default")||!n?null:{code:`${e}\nexport default {};`,map:null}}]}}(e,t);return Ie.rollup(r,e)})))}D.existsSync(ye.appConfig)&&(Ie=require(ye.appConfig));const Ne={name:"basic",dependencies:["husky","tsdx","tslib","typescript","size-limit","@size-limit/preset-small-lib"],packageJson:{version:"0.1.0",license:"MIT",main:"./dist/index.cjs",module:"./dist/index.mjs",exports:{"./package.json":"./package.json",".":{import:"./dist/index.mjs",require:"./dist/index.cjs"}},typings:"dist/index.d.ts",files:["dist","src"],engines:{node:">=14"},scripts:{start:"tsdx watch",build:"tsdx build",test:"tsdx test",posttest:"node test/import.mjs && node test/require.cjs",lint:"tsdx lint",prepare:"tsdx build",size:"size-limit",analyze:"size-limit --why"},peerDependencies:{},husky:{hooks:{"pre-commit":"tsdx lint"}},prettier:{printWidth:80,semi:!0,singleQuote:!0,trailingComma:"es5"}}},Pe={name:"react",dependencies:[...Ne.dependencies,"@types/react","@types/react-dom","react","react-dom"],packageJson:{...Ne.packageJson,peerDependencies:{react:">=16"},scripts:{...Ne.packageJson.scripts,test:"tsdx test"}}},Re={basic:Ne,react:Pe,"react-with-storybook":{dependencies:[...Pe.dependencies,"@babel/core","@storybook/addon-essentials","@storybook/addon-links","@storybook/addon-info","@storybook/addons","@storybook/react","react-is","babel-loader"],name:"react-with-storybook",packageJson:{...Pe.packageJson,scripts:{...Pe.packageJson.scripts,storybook:"start-storybook -p 6006","build-storybook":"build-storybook"}}}};async function Me(){const e=ye.appDist+"/src";await Z.pathExists(e)&&(console.warn('[tsdx]: Your rootDir is currently set to "./". Please change your rootDir to "./src".\nTSDX has deprecated setting tsconfig.compilerOptions.rootDir to "./" as it caused buggy output for declarationMaps and more.\nYou may also need to change your include to remove "test", which also caused declarations to be unnecessarily created for test files.'),await Z.copy(e,ye.appDist,{overwrite:!0}),await Z.remove(e))}const Te=M.default("tsdx");let ze;try{ze=JSON.parse(D.readFileSync(ye.appPackageJson,"utf-8"))}catch(e){}const Ae=e=>N.stat(e).then((e=>e.isDirectory())).catch((()=>!1)),Be=e=>N.stat(e).then((e=>e.isFile())).catch((()=>!1));async function Le(e,t){return f.concatAllArray([].concat(e&&e.length?e:t&&ge(t)||await Ae(ge("src"))&&await async function(e){const t=await Be(ge("src/index.ts"))?".ts":await Be(ge("src/index.tsx"))?".tsx":await Be(ge("src/index.jsx"))?".jsx":".js";return ge(`src/index${t}`)}()).map((e=>T.default(e))))}async function Ue(e){return{...e,name:e.name||ze.name,input:await Le(e.entry,ze.source),format:e.format.split(",").map((e=>"es"===e?"esm":e))}}async function We(){await Z.remove(ye.appDist)}function Ve(e){const t=me(e),r=`#!/usr/bin/env node\n'use strict';\n\nconst { NODE_ENV } = process.env;\nif (NODE_ENV === 'production')\n  module.exports = require('./${t}.production.min.cjs');\nelse\n  module.exports = require('./${t}.development.cjs');\n`;return Z.outputFile(L.default.join(ye.appDist,"index.cjs"),r)}function Ye(e){const t=`#!/usr/bin/env node\n\nexport { default } from './${e}.min.mjs';\nexport * from './${e}.min.mjs';\n`;return Z.outputFile(L.default.join(ye.appDist,"index.mjs"),t)}function Xe(e){W.default.exec(`npm config set init-author-name "${e}"`,{silent:!0})}Te.command("create <pkg>").describe("Create a new package with TSDX").example("create mypackage").option("--template",`Specify a template. Allowed choices: [${Object.keys(Re).join(", ")}]`).example("create --template react mypackage").action((async(e,t)=>{console.log(A.default.blue("\n::::::::::: ::::::::  :::::::::  :::    :::\n    :+:    :+:    :+: :+:    :+: :+:    :+:\n    +:+    +:+        +:+    +:+  +:+  +:+\n    +#+    +#++:++#++ +#+    +:+   +#++:+\n    +#+           +#+ +#+    +#+  +#+  +#+\n    #+#    #+#    #+# #+#    #+# #+#    #+#\n    ###     ########  #########  ###    ###\n"));const r=V.default(`Creating ${A.default.bold.green(e)}...`);let n;try{const o=await Z.realpath(process.cwd());let a=await async function t(n){if(!await Z.pathExists(n))return n;r.fail(`Failed to create ${A.default.bold.red(e)}`);const s=new ie.default({message:`A folder named ${A.default.bold.red(e)} already exists! ${A.default.bold("Choose a different name")}`,initial:e+"-1",result:e=>e.trim()});return e=await s.run(),n=await Z.realpath(process.cwd())+"/"+e,r.start(`Creating ${A.default.bold.green(e)}...`),await t(n)}(o+"/"+e);const i=new le.default({message:"Choose a template",choices:Object.keys(Re)});t.template?(n=t.template.trim(),i.choices.includes(n)||(r.fail(`Invalid template ${A.default.bold.red(n)}`),n=await i.run())):n=await i.run(),r.start(),await Z.copy(L.default.resolve(__dirname,`../templates/${n}`),a,{overwrite:!0}),await Z.move(L.default.resolve(a,"./gitignore"),L.default.resolve(a,"./.gitignore"));let l=await Z.readFile(L.default.resolve(a,"LICENSE"),{encoding:"utf-8"});l=l.replace(/<year>/,`${(new Date).getFullYear()}`);let c=function(){let e="";return e=W.default.exec("npm config get init-author-name",{silent:!0}).stdout.trim(),e||(e=W.default.exec("git config --global user.name",{silent:!0}).stdout.trim(),e?(Xe(e),e):(e=W.default.exec("npm config get init-author-email",{silent:!0}).stdout.trim(),e||(e=W.default.exec("git config --global user.email",{silent:!0}).stdout.trim(),e||e)))}();if(!c){r.stop();const e=new ie.default({name:"author",message:"Who is the package author?"});c=await e.run(),Xe(c),r.start()}l=l.replace(/<author>/,c.trim()),await Z.writeFile(L.default.resolve(a,"LICENSE"),l,{encoding:"utf-8"});const u=(e=>({name:t,author:r})=>({...e.packageJson,name:t,author:r,"size-limit":[{path:`dist/${t}.production.min.cjs`,limit:"10 KB"},{path:`dist/${t}.min.mjs`,limit:"10 KB"}]}))(Re[n]);process.chdir(a);const p=u({name:me(e),author:c}),d=function({engines:e}){return e&&e.node}(p);d&&!Y.default.satisfies(process.version,d)&&(r.fail((s=d,`Unsupported Node version! Your current Node version (${A.default.red(process.version)}) does not satisfy the requirement of Node ${A.default.cyan(s)}.`)),process.exit(1)),await Z.outputJSON(L.default.resolve(a,"package.json"),p),r.succeed(`Created ${A.default.bold.green(e)}`),await be(e)}catch(t){r.fail(`Failed to create ${A.default.bold.red(e)}`),pe(t),process.exit(1)}var s;const o=Re[n],{dependencies:a}=o,i=V.default((l=a.sort(),`Installing npm modules:\n${l.map((function(e){return`    ${A.default.cyan(A.default.bold(e))}`})).join("\n")}\n`)).start();var l;try{const t=await xe();await U.default(t,function(e,t){switch(e){case"npm":return["install",...t,"--save-dev"];case"yarn":return["add",...t,"--dev"]}}(t,a)),i.succeed("Installed dependencies"),console.log(await be(e))}catch(e){i.fail("Failed to install dependencies"),pe(e),process.exit(1)}})),Te.command("watch").describe("Rebuilds on any change").option("--entry, -i","Entry module").example("watch --entry src/foo.tsx").option("--target","Specify your target environment","browser").example("watch --target node").option("--name","Specify name exposed in UMD builds").example("watch --name Foo").option("--format","Specify module format(s)","cjs,esm").example("watch --format cjs,esm").option("--verbose","Keep outdated console output in watch mode instead of clearing the screen").example("watch --verbose").option("--noClean","Don't clean the dist folder").example("watch --noClean").option("--tsconfig","Specify custom tsconfig path").example("watch --tsconfig ./tsconfig.foo.json").option("--onFirstSuccess","Run a command on the first successful build").example('watch --onFirstSuccess "echo The first successful build!"').option("--onSuccess","Run a command on a successful build").example('watch --onSuccess "echo Successful build!"').option("--onFailure","Run a command on a failed build").example('watch --onFailure "The build failed!"').option("--transpileOnly","Skip type checking").example("watch --transpileOnly").option("--extractErrors","Extract invariant errors to ./errors/codes.json.").example("watch --extractErrors").action((async e=>{const t=await Ue(e),n=await _e(t);t.noClean||await We(),t.format.includes("cjs")&&await Ve(t.name),t.format.includes("esm")&&await Ye(t.name);let s=!0,o=null,a=null;function i(e){if(!e)return null;const[t,...r]=e.split(" ");return U.default(t,r,{stdio:"inherit"})}const l=V.default().start();r.watch(n.map((e=>({watch:{silent:!0,include:["src/**"],exclude:["node_modules/**"]},...e})))).on("event",(async e=>{if(await Promise.all([o?o.kill("SIGTERM"):null,a?a.kill("SIGTERM"):null]),"START"===e.code&&(t.verbose||process.stdout.write("win32"===process.platform?"[2J[0f":"[2J[3J[H"),l.start(A.default.bold.cyan("Compiling modules..."))),"ERROR"===e.code&&(l.fail(A.default.bold.red("Failed to compile")),pe(e.error),a=i(t.onFailure)),"END"===e.code){l.succeed(A.default.bold.green("Compiled successfully")),console.log(`\n  ${A.default.dim("Watching for changes")}\n`);try{await Me(),s&&t.onFirstSuccess?(s=!1,i(t.onFirstSuccess)):o=i(t.onSuccess)}catch(e){}}}))})),Te.command("build").describe("Build your project once and exit").option("--entry, -i","Entry module").example("build --entry src/foo.tsx").option("--target","Specify your target environment","browser").example("build --target node").option("--name","Specify name exposed in UMD builds").example("build --name Foo").option("--format","Specify module format(s)","cjs,esm").example("build --format cjs,esm").option("--legacy","Babel transpile and emit ES5.").example("build --legacy").option("--tsconfig","Specify custom tsconfig path").example("build --tsconfig ./tsconfig.foo.json").option("--transpileOnly","Skip type checking").example("build --transpileOnly").option("--extractErrors","Extract errors to ./errors/codes.json and provide a url for decoding.").example("build --extractErrors=https://reactjs.org/docs/error-decoder.html?invariant=").action((async e=>{const t=await Ue(e),n=await _e(t);await We();const s=await async function(){return await X.default.ensureDir(ye.progressEstimatorCache),ce.default({storagePath:ye.progressEstimatorCache})}();t.format.includes("cjs")&&s(Ve(t.name).catch(pe),"Creating CJS entry file"),t.format.includes("esm")&&s(Ye(t.name).catch(pe),"Creating MJS entry file");try{const e=z.default.map(n,(async e=>{let t=await r.rollup(e);await t.write(e.output)})).catch((e=>{throw e})).then((async()=>{await Me()}));s(e,"Building modules"),await e}catch(e){pe(e),process.exit(1)}})),Te.command("test").describe("Run jest test runner. Passes through all flags directly to Jest").action((async e=>{process.env.BABEL_ENV="test",process.env.NODE_ENV="test",process.on("unhandledRejection",(e=>{throw e}));const t=process.argv.slice(2);let r={...(n=e.config?L.default.dirname(e.config):ye.appRoot,{transform:{".(ts|tsx)$":require.resolve("ts-jest/dist"),".(js|jsx)$":require.resolve("babel-jest")},transformIgnorePatterns:["[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"],moduleFileExtensions:["ts","tsx","js","jsx","json","node"],collectCoverageFrom:["src/**/*.{ts,tsx,js,jsx}"],testMatch:["<rootDir>/**/*.(spec|test).{ts,tsx,js,jsx}"],testURL:"http://localhost",rootDir:n,watchPlugins:[require.resolve("jest-watch-typeahead/filename"),require.resolve("jest-watch-typeahead/testname")]}),...ze.jest};var n;const s=await Z.pathExists(ye.jestConfig);if(e.config||s){const t=ge(e.config||ye.jestConfig),n=require(t);r={...r,...n}}if(e.config){let e=t.indexOf("--config");if(-1!==e)t.splice(e,2);else{const r=/--config=.+/;e=t.findIndex((e=>e.match(r))),-1!==e&&t.splice(e,1)}}t.push("--config",JSON.stringify({...r}));const[,...o]=t;B.default.run(o)})),Te.command("lint").describe("Run eslint with Prettier").example("lint src test").option("--fix","Fixes fixable errors and warnings").example("lint src test --fix").option("--ignore-pattern","Ignore a pattern").example("lint src test --ignore-pattern test/foobar.ts").option("--max-warnings","Exits with non-zero error code if number of warnings exceed this number",Infinity).example("lint src test --max-warnings 10").option("--write-file","Write the config file locally").example("lint --write-file").option("--report-file","Write JSON report to file locally").example("lint --report-file eslint-report.json").action((async e=>{if(0===e._.length&&!e["write-file"]){const t=["src","test"].filter(Z.existsSync);e._=t,console.log(A.default.yellow(`Defaulting to "tsdx lint ${t.join(" ")}"`,'\nYou can override this in the package.json scripts, like "lint": "tsdx lint src otherDir"'))}const t=await async function({pkg:e,rootDir:t,writeFile:r}){const n={extends:["react-app","prettier/@typescript-eslint","plugin:prettier/recommended"],settings:{react:{version:Boolean(function({dependencies:e,devDependencies:t}){return e&&e.react||t&&t.react}(e))?"detect":"999.999.999"}}};if(!r)return n;const s=L.default.join(t,".eslintrc.js");try{await X.default.writeFile(s,`module.exports = ${JSON.stringify(n,null,2)}`,{flag:"wx"})}catch(e){return"EEXIST"===e.code?console.error("Error trying to save the Eslint configuration file:",`${s} already exists.`):console.error(e),n}}({pkg:ze,rootDir:ye.appRoot,writeFile:e["write-file"]}),r=new a.CLIEngine({baseConfig:{...t,...ze.eslint},extensions:[".ts",".tsx",".js",".jsx"],fix:e.fix,ignorePattern:e["ignore-pattern"]}),n=r.executeOnFiles(e._);e.fix&&a.CLIEngine.outputFixes(n),console.log(r.getFormatter()(n.results)),e["report-file"]&&await Z.outputFile(e["report-file"],r.getFormatter("json")(n.results)),n.errorCount&&process.exit(1),n.warningCount>e["max-warnings"]&&process.exit(1)})),Te.parse(process.argv),exports.isDir=Ae,exports.isFile=Be;
//# sourceMappingURL=tsdx.production.min.cjs.map
