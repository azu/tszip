{"version":3,"file":"export-ts.development.cjs","sources":["../src/logError.ts","../src/utils.ts","../src/constants.ts","../src/getInstallCmd.ts","../src/output.ts","../src/utils/log.ts","../src/messages.ts","../src/errors/invertObject.ts","../src/errors/evalToString.ts","../src/errors/extractErrors.ts","../src/babelPluginExportTs.ts","../src/createRollupConfig.ts","../src/createBuildConfigs.ts","../src/createJestConfig.ts","../src/createEslintConfig.ts","../src/getInstallArgs.ts","../src/createProgressEstimator.ts","../src/templates/basic.ts","../src/templates/react.ts","../src/templates/react-with-storybook.ts","../src/templates/index.ts","../src/templates/utils/index.ts","../src/deprecated.ts","../src/index.ts"],"sourcesContent":["import chalk from 'chalk';\n\nconst stderr = console.error.bind(console);\n\nexport default function logError(err: any) {\n  const error = err.error || err;\n  const description = `${error.name ? error.name + ': ' : ''}${\n    error.message || error\n  }`;\n  const message = error.plugin\n    ? error.plugin === 'rpt2'\n      ? `(typescript) ${description}`\n      : `(${error.plugin} plugin) ${description}`\n    : description;\n\n  stderr(chalk.bold.red(message));\n\n  if (error.loc) {\n    stderr();\n    stderr(`at ${error.loc.file}:${error.loc.line}:${error.loc.column}`);\n  }\n\n  if (error.frame) {\n    stderr();\n    stderr(chalk.dim(error.frame));\n  } else if (err.stack) {\n    const headlessStack = error.stack.replace(message, '');\n    stderr(chalk.dim(headlessStack));\n  }\n\n  stderr();\n}\n","import fs from 'fs-extra';\nimport path from 'path';\nimport camelCase from 'camelcase';\n\nimport { PackageJson } from './types';\n\n// Remove the package name scope if it exists\nexport const removeScope = (name: string) => name.replace(/^@.*\\//, '');\n\n// UMD-safe package name\nexport const safeVariableName = (name: string) =>\n  camelCase(\n    removeScope(name)\n      .toLowerCase()\n      .replace(/((^[^a-zA-Z]+)|[^\\w.-])|([^a-zA-Z0-9]+$)/g, '')\n  );\n\nexport const safePackageName = (name: string) =>\n  name\n    .toLowerCase()\n    .replace(/(^@.*\\/)|((^[^a-zA-Z]+)|[^\\w.-])|([^a-zA-Z0-9]+$)/g, '');\n\nexport const external = (id: string) =>\n  !id.startsWith('.') && !path.isAbsolute(id);\n\n// Make sure any symlinks in the project folder are resolved:\n// https://github.com/facebookincubator/create-react-app/issues/637\nexport const appDirectory = fs.realpathSync(process.cwd());\nexport const resolveApp = function (relativePath: string) {\n  return path.resolve(appDirectory, relativePath);\n};\n\n// Taken from Create React App, react-dev-utils/clearConsole\n// @see https://github.com/facebook/create-react-app/blob/master/packages/react-dev-utils/clearConsole.js\nexport function clearConsole() {\n  process.stdout.write(\n    process.platform === 'win32' ? '\\x1B[2J\\x1B[0f' : '\\x1B[2J\\x1B[3J\\x1B[H'\n  );\n}\n\nexport function getReactVersion({\n  dependencies,\n  devDependencies,\n}: PackageJson) {\n  return (\n    (dependencies && dependencies.react) ||\n    (devDependencies && devDependencies.react)\n  );\n}\n\nexport function getNodeEngineRequirement({ engines }: PackageJson) {\n  return engines && engines.node;\n}\n","import { resolveApp } from './utils';\n\nexport const paths = {\n  appPackageJson: resolveApp('package.json'),\n  tsconfigJson: resolveApp('tsconfig.json'),\n  testsSetup: resolveApp('test/setupTests.ts'),\n  appRoot: resolveApp('.'),\n  appSrc: resolveApp('src'),\n  appErrorsJson: resolveApp('errors/codes.json'),\n  appErrors: resolveApp('errors'),\n  appDist: resolveApp('dist'),\n  appConfig: resolveApp('export-ts.config.js'),\n  jestConfig: resolveApp('jest.config.js'),\n  progressEstimatorCache: resolveApp('node_modules/.cache/.progress-estimator'),\n};\n","import execa from 'execa';\n\nlet cmd: InstallCommand;\n\nexport type InstallCommand = 'yarn' | 'npm';\n\nexport default async function getInstallCmd(): Promise<InstallCommand> {\n  if (cmd) {\n    return cmd;\n  }\n\n  try {\n    await execa('yarnpkg', ['--version']);\n    cmd = 'yarn';\n  } catch (e) {\n    cmd = 'npm';\n  }\n\n  return cmd;\n}\n","import { eraseLine } from 'ansi-escapes';\nimport chalk from 'chalk';\nimport ora from 'ora';\n\n// This was copied from Razzle. Lots of unused stuff.\nexport const info = (msg: string) => {\n  console.log(`${chalk.gray('>')} ${msg}`);\n};\n\nexport const error = (msg: string | Error) => {\n  if (msg instanceof Error) {\n    msg = msg.message;\n  }\n\n  console.error(`${chalk.red('> Error!')} ${msg}`);\n};\n\nexport const success = (msg: string) => {\n  console.log(`${chalk.green('> Success!')} ${msg}`);\n};\n\nexport const wait = (msg: string) => {\n  const spinner = ora(chalk.green(msg));\n  spinner.color = 'blue';\n  spinner.start();\n\n  return () => {\n    spinner.stop();\n    process.stdout.write(eraseLine);\n  };\n};\n\nexport const cmd = (cmd: string) => {\n  return chalk.bold(chalk.cyan(cmd));\n};\n\nexport const code = (cmd: string) => {\n  return `${chalk.gray('`')}${chalk.bold(cmd)}${chalk.gray('`')}`;\n};\n\nexport const param = (param: string) => {\n  return chalk.bold(`${chalk.gray('{')}${chalk.bold(param)}${chalk.gray('}')}`);\n};\n","export const indentString = (msg: string, indent = 1) => {\n  return `${' '.repeat(indent * 2)}${msg}`;\n};\n\nexport const indentLog = (msg: string, indent = 1) => {\n  console.log(indentString(msg, indent));\n};\n","import chalk from 'chalk';\nimport getInstallCmd from './getInstallCmd';\nimport * as Output from './output';\nimport { indentString } from './utils/log';\n\n// This was copied from Razzle. Lots of unused stuff.\nconst program = {\n  name: 'export-ts',\n};\n\nexport const help = function () {\n  return `\n    Only ${chalk.green('<project-directory>')} is required.\n    If you have any problems, do not hesitate to file an issue:\n    ${chalk.cyan('https://github.com/ctjlewis/export-ts/issues/new')}\n  `;\n};\n\nexport const missingProjectName = function () {\n  return `\nPlease specify the project directory:\n  ${chalk.cyan(program.name)} ${chalk.green('<project-directory>')}\nFor example:\n  ${chalk.cyan(program.name)} ${chalk.green('my-export-ts-lib')}\nRun ${chalk.cyan(`${program.name} --help`)} to see all options.\n`;\n};\n\nexport const alreadyExists = function (projectName: string) {\n  return indentString(\n    `Uh oh! Looks like there's already a directory called ${chalk.red(\n      projectName\n    )}. Please try a different name or delete that folder.`\n  );\n};\n\nexport const installing = function (packages: string[]) {\n  const pkgText = packages\n    .map((pkg) => indentString(`${chalk.cyan(chalk.bold(pkg))}`, 2))\n    .join('\\n');\n\n  return `Installing dependencies:\\n\\n${pkgText}\\n\\n`;\n};\n\nexport const installError = function (packages: string[]) {\n  const pkgText = packages\n    .map(function (pkg) {\n      return `${chalk.cyan(chalk.bold(pkg))}`;\n    })\n    .join(', ');\n\n  Output.error(`Failed to install ${pkgText}, try again.`);\n};\n\nexport const copying = function (projectName: string) {\n  return `Creating ${chalk.bold(chalk.green(projectName))}...`;\n};\n\nexport const start = async function (projectName: string) {\n  const cmd = await getInstallCmd();\n\n  const commands = {\n    install: cmd === 'npm' ? 'npm install' : 'yarn install',\n    build: cmd === 'npm' ? 'npm run build' : 'yarn build',\n    start: cmd === 'npm' ? 'npm run start' : 'yarn start',\n    test: cmd === 'npm' ? 'npm test' : 'yarn test',\n  };\n\n  return `\n  ${chalk.green('Awesome!')} You're now ready to start coding.\n  \n  I already ran ${Output.cmd(commands.install)} for you, so your next steps are:\n    ${Output.cmd(`cd ${projectName}`)}\n  \n  To start developing (rebuilds on changes):\n    ${Output.cmd(commands.start)}\n  \n  To build for production:\n    ${Output.cmd(commands.build)}\n\n  To test your library with Jest:\n    ${Output.cmd(commands.test)}\n    \n  Questions? Feedback? Please let me know!\n  ${chalk.green('https://github.com/ctjlewis/export-ts/issues')}\n`;\n};\n\nexport const incorrectNodeVersion = function (requiredVersion: string) {\n  return `Unsupported Node version! Your current Node version (${chalk.red(\n    process.version\n  )}) does not satisfy the requirement of Node ${chalk.cyan(requiredVersion)}.`;\n};\n","// largely borrowed from https://github.com/facebook/react/blob/8b2d3783e58d1acea53428a10d2035a8399060fe/scripts/error-codes/invertObject.js\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * turns\n *   { 'MUCH ERROR': '0', 'SUCH WRONG': '1' }\n * into\n *   { 0: 'MUCH ERROR', 1: 'SUCH WRONG' }\n */\n\ntype Dict = { [key: string]: any };\n\nexport function invertObject(targetObj: Dict) {\n  const result: Dict = {};\n  const mapKeys = Object.keys(targetObj);\n\n  for (const originalKey of mapKeys) {\n    const originalVal = targetObj[originalKey];\n\n    result[originalVal] = originalKey;\n  }\n\n  return result;\n}\n","// largely borrowed from https://github.com/facebook/react/blob/8b2d3783e58d1acea53428a10d2035a8399060fe/scripts/shared/evalToString.js\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function evalToString(ast: any): string {\n  switch (ast.type) {\n    case 'StringLiteral':\n    case 'Literal': // ESLint\n      return ast.value;\n    case 'BinaryExpression': // `+`\n      if (ast.operator !== '+') {\n        throw new Error('Unsupported binary operator ' + ast.operator);\n      }\n      return evalToString(ast.left) + evalToString(ast.right);\n    default:\n      throw new Error('Unsupported type ' + ast.type);\n  }\n}\n","// largely borrowed from https://github.com/facebook/react/blob/8b2d3783e58d1acea53428a10d2035a8399060fe/scripts/error-codes/extract-errors.js\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs-extra';\nimport { parse, ParserOptions } from '@babel/parser';\nimport traverse from '@babel/traverse';\nimport { invertObject } from './invertObject';\nimport { evalToString } from './evalToString';\nimport { paths } from '../constants';\nimport { safeVariableName } from '../utils';\nimport { pascalCase } from 'pascal-case';\n\nconst babelParserOptions: ParserOptions = {\n  sourceType: 'module',\n  // As a parser, @babel/parser has its own options and we can't directly\n  // import/require a babel preset. It should be kept **the same** as\n  // the `babel-plugin-syntax-*` ones specified in\n  // https://github.com/facebook/fbjs/blob/master/packages/babel-preset-fbjs/configure.js\n  plugins: [\n    'classProperties',\n    'flow',\n    'jsx',\n    'trailingFunctionCommas',\n    'objectRestSpread',\n  ],\n} as ParserOptions; // workaround for trailingFunctionCommas syntax\n\nexport async function extractErrors(opts: any) {\n  if (!opts || !opts.errorMapFilePath) {\n    throw new Error(\n      'Missing options. Ensure you pass an object with `errorMapFilePath`.'\n    );\n  }\n\n  if (!opts.name || !opts.name) {\n    throw new Error(\n      'Missing options. Ensure you pass --name flag to export-ts'\n    );\n  }\n\n  const errorMapFilePath = opts.errorMapFilePath;\n  let existingErrorMap: any;\n  try {\n    /**\n     * Using `fs.readFile` instead of `require` here, because `require()` calls\n     * are cached, and the cache map is not properly invalidated after file\n     * changes.\n     */\n    const fileContents = await fs.readFile(errorMapFilePath, 'utf-8');\n    existingErrorMap = JSON.parse(fileContents);\n  } catch (e) {\n    existingErrorMap = {};\n  }\n\n  const allErrorIDs = Object.keys(existingErrorMap);\n  let currentID: any;\n\n  if (allErrorIDs.length === 0) {\n    // Map is empty\n    currentID = 0;\n  } else {\n    currentID = Math.max.apply(null, allErrorIDs as any) + 1;\n  }\n\n  // Here we invert the map object in memory for faster error code lookup\n  existingErrorMap = invertObject(existingErrorMap);\n\n  function transform(source: string) {\n    const ast = parse(source, babelParserOptions);\n\n    traverse(ast, {\n      CallExpression: {\n        exit(astPath: any) {\n          if (astPath.get('callee').isIdentifier({ name: 'invariant' })) {\n            const node = astPath.node;\n\n            // error messages can be concatenated (`+`) at runtime, so here's a\n            // trivial partial evaluator that interprets the literal value\n            const errorMsgLiteral = evalToString(node.arguments[1]);\n            addToErrorMap(errorMsgLiteral);\n          }\n        },\n      },\n    });\n  }\n\n  function addToErrorMap(errorMsgLiteral: any) {\n    if (existingErrorMap.hasOwnProperty(errorMsgLiteral)) {\n      return;\n    }\n    existingErrorMap[errorMsgLiteral] = '' + currentID++;\n  }\n\n  async function flush() {\n    const prettyName = pascalCase(safeVariableName(opts.name));\n    // Ensure that the ./src/errors directory exists or create it\n    await fs.ensureDir(paths.appErrors);\n\n    // Output messages to ./errors/codes.json\n    await fs.writeFile(\n      errorMapFilePath,\n      JSON.stringify(invertObject(existingErrorMap), null, 2) + '\\n',\n      'utf-8'\n    );\n\n    // Write the error files, unless they already exist\n    await fs.writeFile(\n      paths.appErrors + '/ErrorDev.js',\n      `\nfunction ErrorDev(message) {\n  const error = new Error(message);\n  error.name = 'Invariant Violation';\n  return error;\n}\n\nexport default ErrorDev;\n      `,\n      'utf-8'\n    );\n\n    await fs.writeFile(\n      paths.appErrors + '/ErrorProd.js',\n      `\nfunction ErrorProd(code) {\n  // TODO: replace this URL with yours\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return new Error(\n    \\`Minified ${prettyName} error #$\\{code}; visit $\\{url} for the full message or \\` +\n      'use the non-minified dev environment for full errors and additional ' +\n      'helpful warnings. '\n  );\n}\n\nexport default ErrorProd;\n`,\n      'utf-8'\n    );\n  }\n\n  return async function extractErrors(source: any) {\n    transform(source);\n    await flush();\n  };\n}\n","/**\n * @todo Do not use require.resolve so that the package can ship as ESM.\n */\n\nimport { createConfigItem } from '@babel/core';\nimport { createBabelInputPluginFactory } from '@rollup/plugin-babel';\nimport merge from 'lodash.merge';\n\nexport const isTruthy = (obj?: any) => {\n  if (!obj) {\n    return false;\n  }\n\n  return obj.constructor !== Object || Object.keys(obj).length > 0;\n};\n\n// replace lodash with lodash-es, but not lodash/fp\nconst replacements = [{ original: 'lodash(?!/fp)', replacement: 'lodash-es' }];\n\nexport const mergeConfigItems = (type: any, ...configItemsToMerge: any[]) => {\n  const mergedItems: any[] = [];\n\n  configItemsToMerge.forEach((configItemToMerge) => {\n    configItemToMerge.forEach((item: any) => {\n      const itemToMergeWithIndex = mergedItems.findIndex(\n        (mergedItem) => mergedItem.file.resolved === item.file.resolved\n      );\n\n      if (itemToMergeWithIndex === -1) {\n        mergedItems.push(item);\n        return;\n      }\n\n      mergedItems[itemToMergeWithIndex] = createConfigItem(\n        [\n          mergedItems[itemToMergeWithIndex].file.resolved,\n          merge(mergedItems[itemToMergeWithIndex].options, item.options),\n        ],\n        {\n          type,\n        }\n      );\n    });\n  });\n\n  return mergedItems;\n};\n\nexport const createConfigItems = (type: any, items: any[]) => {\n  return items.map(({ name, ...options }) => {\n    return createConfigItem([require.resolve(name), options], { type });\n  });\n};\n\nexport const babelPluginExportTs = createBabelInputPluginFactory(() => ({\n  // Passed the plugin options.\n  options({ custom: customOptions, ...pluginOptions }: any) {\n    return {\n      // Pull out any custom options that the plugin might have.\n      customOptions,\n\n      // Pass the options back with the two custom options removed.\n      pluginOptions,\n    };\n  },\n  config(config: any, { customOptions }: any) {\n    const defaultPlugins = createConfigItems(\n      'plugin',\n      [\n        // {\n        //   name: '@babel/plugin-transform-react-jsx',\n        //   pragma: customOptions.jsx || 'h',\n        //   pragmaFrag: customOptions.jsxFragment || 'Fragment',\n        // },\n        { name: 'babel-plugin-macros' },\n        { name: 'babel-plugin-annotate-pure-calls' },\n        { name: 'babel-plugin-dev-expression' },\n        customOptions.format !== 'cjs' && {\n          name: 'babel-plugin-transform-rename-import',\n          replacements,\n        },\n        {\n          name: 'babel-plugin-polyfill-regenerator',\n          // don't pollute global env as this is being used in a library\n          method: 'usage-pure',\n        },\n        {\n          name: '@babel/plugin-proposal-class-properties',\n          loose: true,\n        },\n        isTruthy(customOptions.extractErrors) && {\n          name: './errors/transformErrorMessages',\n        },\n      ].filter(Boolean)\n    );\n\n    const babelOptions = config.options || {};\n    babelOptions.presets = babelOptions.presets || [];\n\n    const presetEnvIdx = babelOptions.presets.findIndex((preset: any) =>\n      preset.file.request.includes('@babel/preset-env')\n    );\n\n    // if they use preset-env, merge their options with ours\n    if (presetEnvIdx !== -1) {\n      const presetEnv = babelOptions.presets[presetEnvIdx];\n      babelOptions.presets[presetEnvIdx] = createConfigItem(\n        [\n          presetEnv.file.resolved,\n          merge(\n            {\n              loose: true,\n              targets: customOptions.targets,\n            },\n            presetEnv.options,\n            {\n              modules: false,\n            }\n          ),\n        ],\n        {\n          type: `preset`,\n        }\n      );\n    } else {\n      // if no preset-env, add it & merge with their presets\n      const defaultPresets = createConfigItems('preset', [\n        {\n          name: '@babel/preset-env',\n          targets: customOptions.targets,\n          modules: false,\n          loose: true,\n        },\n      ]);\n\n      babelOptions.presets = mergeConfigItems(\n        'preset',\n        defaultPresets,\n        babelOptions.presets\n      );\n    }\n\n    // Merge babelrc & our plugins together\n    babelOptions.plugins = mergeConfigItems(\n      'plugin',\n      defaultPlugins,\n      babelOptions.plugins || []\n    );\n\n    return babelOptions;\n  },\n}));\n","import resolveExports from 'resolve.exports';\n\nimport { safeVariableName, safePackageName, external } from './utils';\nimport { paths } from './constants';\nimport { RollupOptions } from 'rollup';\nimport { terser } from 'rollup-plugin-terser';\nimport { DEFAULT_EXTENSIONS as DEFAULT_BABEL_EXTENSIONS } from '@babel/core';\nimport commonjs from '@rollup/plugin-commonjs';\nimport json from '@rollup/plugin-json';\n// import replace from '@rollup/plugin-replace';\nimport resolvePlugin from '@rollup/plugin-node-resolve';\nimport sourceMaps from 'rollup-plugin-sourcemaps';\nimport typescript from 'rollup-plugin-typescript2';\nimport ts from 'typescript';\n\nimport { extractErrors } from './errors/extractErrors';\nimport { babelPluginExportTs } from './babelPluginExportTs';\nimport { ExportTsOptions } from './types';\nimport { optimizeLodashImports } from '@optimize-lodash/rollup-plugin';\nimport { extname, resolve, sep } from 'path';\nimport { existsSync, readFileSync } from 'fs';\n\n/**\n * A crude RegExp to match the `from 'import-source'` part of import statements,\n * or a require(...) call.\n */\nconst generateImportPattern = (importSource: string) =>\n  new RegExp(\n    `(from|require\\\\()\\\\s*['\"]${importSource.replace('.', '\\\\.')}['\"]`,\n    'g'\n  );\n\n/**\n * Get the package.json for a given absolute entry point.\n */\nfunction getPackageJson(absPath: string) {\n  const parts = absPath.split('node_modules');\n  const rootPath = parts[0];\n\n  if (parts.length < 2) return null;\n  const moduleParts = parts[1].split(sep);\n\n  /**\n   * node_modules/name => name\n   * node_modules/@test/test => @test/test\n   */\n  const moduleName = moduleParts[1].startsWith('@')\n    ? moduleParts.slice(1, 3).join(sep)\n    : moduleParts[1];\n\n  return resolve(rootPath, 'node_modules', moduleName, 'package.json');\n}\n\n/**\n * These packages will not be resolved by Rollup and will be left as imports.\n */\nconst EXTERNAL_PACKAGES = ['react', 'react-native'];\n\nconst errorCodeOpts = {\n  errorMapFilePath: paths.appErrorsJson,\n};\n\nexport async function createRollupConfig(\n  opts: ExportTsOptions,\n  outputNum: number\n): Promise<RollupOptions> {\n  const findAndRecordErrorCodes = await extractErrors({\n    ...errorCodeOpts,\n    ...opts,\n  });\n\n  const isEsm = opts.format.includes('es') || opts.format.includes('esm');\n\n  const shouldMinify =\n    opts.minify !== undefined\n      ? opts.minify\n      : opts.env === 'production' || isEsm;\n\n  let formatString = ['esm', 'cjs'].includes(opts.format) ? '' : opts.format;\n  let fileExtension = opts.format === 'esm' ? 'mjs' : 'cjs';\n\n  const outputName = [\n    `${paths.appDist}/${safePackageName(opts.name)}`,\n    formatString,\n    opts.env,\n    shouldMinify ? 'min' : '',\n    fileExtension,\n  ]\n    .filter(Boolean)\n    .join('.');\n\n  const tsconfigPath = opts.tsconfig || paths.tsconfigJson;\n  // borrowed from https://github.com/facebook/create-react-app/pull/7248\n  const tsconfigJSON = ts.readConfigFile(tsconfigPath, ts.sys.readFile).config;\n  // borrowed from https://github.com/ezolenko/rollup-plugin-typescript2/blob/42173460541b0c444326bf14f2c8c27269c4cb11/src/parse-tsconfig.ts#L48\n  const tsCompilerOptions = ts.parseJsonConfigFileContent(\n    tsconfigJSON,\n    ts.sys,\n    './'\n  ).options;\n\n  const PRODUCTION = process.env.NODE_ENV === 'production';\n\n  const fileExtensions = [\n    opts.format === 'esm' ? '.mjs' : null,\n    opts.format === 'cjs' ? '.cjs' : null,\n    '.js',\n  ].filter(Boolean);\n\n  return {\n    // Tell Rollup the entry point to the package\n    input: opts.input,\n    // Tell Rollup which packages to ignore\n    external: (id: string) => {\n      // bundle in polyfills as TSDX can't (yet) ensure they're installed as deps\n      if (id.startsWith('regenerator-runtime')) {\n        return false;\n      }\n\n      if (EXTERNAL_PACKAGES.includes(id)) {\n        return true;\n      }\n\n      return external(id);\n    },\n    // Minimize runtime error surface as much as possible\n    shimMissingExports: true,\n    // Rollup has treeshaking by default, but we can optimize it further...\n    treeshake: {\n      // We assume reading a property of an object never has side-effects.\n      // This means tsdx WILL remove getters and setters defined directly on objects.\n      // Any getters or setters defined on classes will not be effected.\n      //\n      // @example\n      //\n      // const foo = {\n      //  get bar() {\n      //    console.log('effect');\n      //    return 'bar';\n      //  }\n      // }\n      //\n      // const result = foo.bar;\n      // const illegalAccess = foo.quux.tooDeep;\n      //\n      // Punchline....Don't use getters and setters\n      propertyReadSideEffects: false,\n    },\n    // Establish Rollup output\n    output: {\n      // Set filenames of the consumer's package\n      file: outputName,\n      // Pass through the file format\n      format: isEsm ? 'es' : opts.format,\n      // Do not let Rollup call Object.freeze() on namespace import objects\n      // (i.e. import * as namespaceImportObject from...) that are accessed dynamically.\n      freeze: false,\n      // Respect tsconfig esModuleInterop when setting __esModule.\n      esModule: Boolean(tsCompilerOptions?.esModuleInterop) || isEsm,\n      name: opts.name || safeVariableName(opts.name),\n      sourcemap: true,\n      globals: {\n        react: 'React',\n        'react-native': 'ReactNative',\n        'lodash-es': 'lodashEs',\n        'lodash/fp': 'lodashFp',\n      },\n      exports: 'named',\n    },\n    plugins: [\n      /**\n       * Extract errors to `errors/` dir if --extractErrors passed.\n       */\n      opts.extractErrors && {\n        name: 'Extract errors',\n        async transform(code: string) {\n          try {\n            await findAndRecordErrorCodes(code);\n          } catch (e) {\n            return null;\n          }\n          return { code, map: null };\n        },\n      },\n      /**\n       * Resolve only non-JS. Leave regular imports alone, since packages will\n       * ship with dependencies.\n       */\n      resolvePlugin({\n        /**\n         * Do not allow CJS imports.\n         */\n        modulesOnly: true,\n        /**\n         * For node output, do not resolve `browser` field.\n         */\n        browser: opts.target !== 'node',\n        /**\n         * Resolve JSX, JSON, and .node files.\n         */\n        extensions: ['.jsx', '.json', '.node'],\n      }),\n      /**\n       * All bundled external modules need to be converted from CJS to ESM.\n       */\n      commonjs({\n        /**\n         * CJS/ESM interop. Support Node's .cjs and .mjs spec.\n         */\n        extensions: ['.js', '.cjs', '.mjs'],\n        /**\n         * Allow require('my-package') === await import('my-package').\n         *\n         * The `modulesOnly` option of @rollup/plugin-node-resolve ensures that\n         * the compiler will throw if there is an issue\n         */\n        esmExternals: true,\n        requireReturnsDefault: true,\n        /**\n         * Turn `require` statements into `import` statements in ESM out.\n         */\n        transformMixedEsModules: true,\n        /**\n         * Use Regex to make sure to include eventual hoisted packages.\n         */\n        include:\n          opts.format === 'umd' || isEsm\n            ? /\\/node_modules\\//\n            : /\\/regenerator-runtime\\//,\n      }),\n      /**\n       * Convert JSON to ESM.\n       */\n      json(),\n      /**\n       * Custom plugin that removes shebang from code because newer versions of\n       * bublé bundle their own private version of `acorn` and we can't find a\n       * way to patch in the option `allowHashBang` to acorn. Taken from\n       * microbundle.\n       *\n       * @see https://github.com/Rich-Harris/buble/pull/165\n       */\n      {\n        name: 'Remove shebang',\n        transform(code: string) {\n          let reg = /^#!(.*)/;\n          code = code.replace(reg, '');\n\n          return {\n            code,\n            map: null,\n          };\n        },\n      },\n      /**\n       * Run TSC and transpile TypeScript.\n       */\n      typescript({\n        typescript: ts,\n        tsconfig: opts.tsconfig,\n        tsconfigDefaults: {\n          exclude: [\n            // all TS test files, regardless whether co-located or in test/ etc\n            '**/*.spec.ts',\n            '**/*.test.ts',\n            '**/*.spec.tsx',\n            '**/*.test.tsx',\n            // TS defaults below\n            'node_modules',\n            'bower_components',\n            'jspm_packages',\n            paths.appDist,\n          ],\n          compilerOptions: {\n            sourceMap: true,\n            declaration: true,\n            jsx: 'react',\n          },\n        },\n        tsconfigOverride: {\n          compilerOptions: {\n            // TS -> esnext, then leave the rest to babel-preset-env\n            module: 'esnext',\n            target: 'esnext',\n            // don't output declarations more than once\n            ...(outputNum > 0\n              ? { declaration: false, declarationMap: false }\n              : {}),\n          },\n        },\n        check: !opts.transpileOnly && outputNum === 0,\n        useTsconfigDeclarationDir: Boolean(tsCompilerOptions?.declarationDir),\n      }),\n      /**\n       * In --legacy mode, use Babel to transpile to ES5.\n       */\n      opts.legacy &&\n        babelPluginExportTs({\n          exclude: 'node_modules/**',\n          extensions: [...DEFAULT_BABEL_EXTENSIONS, 'ts', 'tsx'],\n          passPerPreset: true,\n          custom: {\n            targets: {\n              ...(opts.target === 'node' ? { node: 14 } : {}),\n              esmodules: isEsm,\n            },\n            extractErrors: opts.extractErrors,\n            format: opts.format,\n          },\n          babelHelpers: 'bundled',\n        }),\n      sourceMaps(),\n      /**\n       * Minify and compress with Terser for max DCE. Emit latest featureset.\n       *\n       * This is called before @rollup/replace-plugin to minimize the emitted\n       * code it would need to search.\n       */\n      shouldMinify &&\n        terser({\n          format: {\n            keep_quoted_props: true,\n            comments: false,\n          },\n          compress: {\n            keep_infinity: true,\n            pure_getters: true,\n            passes: 10,\n          },\n          ecma: opts.legacy ? 5 : 2020,\n          module: isEsm,\n          toplevel: opts.format === 'cjs' || isEsm,\n        }),\n      optimizeLodashImports({\n        useLodashEs: isEsm || undefined,\n      }),\n      /**\n       * Replace process.env.NODE_ENV variable, preventing assignment.\n       */\n      opts.env && {\n        name: 'Ensure default exports',\n        renderChunk: async (code: string, _: any) => {\n          return {\n            code: code.replace(\n              /process\\.env\\.NODE_ENV(?!\\s*=)/g,\n              JSON.stringify(PRODUCTION ? 'production' : 'development')\n            ),\n            map: null,\n          };\n        },\n      },\n      // opts.env &&\n      //   replace({\n      //     preventAssignment: true,\n      //     'process.env.NODE_ENV': JSON.stringify(\n      //       PRODUCTION ? 'production' : 'development'\n      //     ),\n      //   }),\n      /**\n       * If not in --legacy mode, ensure lodash imports are optimized in the\n       * final bundle.\n       */\n      !opts.legacy &&\n        optimizeLodashImports({\n          useLodashEs: isEsm || undefined,\n        }),\n      /**\n       * Resolve every relative import in output to their entry points.\n       *\n       * TypeScript loves to leave things like `import { jsx } from\n       * 'react/jsx-runtime` when react/jsx-runtime isn't a valid import\n       * source:  react/jsx-runtime.js *is*.\n       */\n      {\n        name: 'Resolve final runtime imports to files',\n        renderChunk: async (code: string, chunk: any) => {\n          /**\n           * Iterate over imports and rewrite all import sources to entry\n           * points.\n           */\n          for (const chunkImport of chunk.imports) {\n            /**\n             * If the import already has a file extension, do not touch.\n             */\n            if (extname(chunkImport)) continue;\n            /**\n             * The absolute location of the module entry point.\n             * `require.resolve` logic can be used to resolve the \"vanilla\"\n             * entry point as the output will be ES, and then module-specific\n             * extensions (.mjs, .cjs) will be tried.\n             */\n            let absEntryPoint = require.resolve(chunkImport);\n            const originalFileExt = extname(absEntryPoint);\n            const absEntryWithoutExtension = absEntryPoint.replace(\n              originalFileExt,\n              ''\n            );\n            /**\n             * Try to resolve ESM/CJS-specific extensions over .js when bundling\n             * for those formats.\n             */\n            if (opts.format === 'esm' || opts.format === 'cjs') {\n              for (const fileExtension of fileExtensions) {\n                const withExtension = absEntryWithoutExtension + fileExtension;\n                if (existsSync(withExtension)) {\n                  absEntryPoint = withExtension;\n                  break;\n                }\n              }\n            }\n\n            const packageJsonPath = getPackageJson(absEntryPoint);\n            if (!packageJsonPath || !existsSync(packageJsonPath)) continue;\n\n            /**\n             * Check if there's `exports` package.json logic. if there is, it\n             * controls the flow.\n             */\n            const packageJsonContent = readFileSync(packageJsonPath, 'utf-8');\n            const packageJson = JSON.parse(packageJsonContent);\n            const exportsFieldResolution = resolveExports.resolve(\n              packageJson,\n              chunkImport\n            );\n\n            /**\n             * If there is `exports` logic that resolves this import, do not\n             * rewrite it.\n             */\n            if (exportsFieldResolution) continue;\n\n            /**\n             * Remove unnecessary absolute specification.\n             */\n            const relativeEntryPoint = absEntryPoint.slice(\n              absEntryPoint.indexOf(chunkImport)\n            );\n            /**\n             * The pattern matching the \"from ...\" import statement for this\n             * import.\n             */\n            const importPattern = generateImportPattern(chunkImport);\n            /**\n             * Read the matched import/require statements and replace them.\n             */\n            const matches = code.match(importPattern) ?? [];\n            for (const match of matches) {\n              const rewritten = match.replace(chunkImport, relativeEntryPoint);\n              code = code.replace(match, rewritten);\n            }\n          }\n\n          return {\n            code,\n            map: null,\n          };\n        },\n      },\n      /**\n       * Ensure there's an empty default export. This is the only way to have a\n       * dist/index.mjs with `export { default } from './package.min.mjs'` and\n       * support default exports at all.\n       *\n       * @see https://www.npmjs.com/package/rollup-plugin-export-default\n       */\n      {\n        name: 'Ensure default exports',\n        renderChunk: async (code: string, chunk: any) => {\n          if (chunk.exports.includes('default') || !isEsm) {\n            return null;\n          }\n\n          return {\n            code: `${code}\\nexport default {};`,\n            map: null,\n          };\n        },\n      },\n    ],\n  };\n}\n","import { RollupOptions, OutputOptions } from 'rollup';\nimport { concatAllArray } from 'jpjs';\n\nimport { paths } from './constants';\nimport { ExportTsOptions, NormalizedOpts } from './types';\n\nimport { createRollupConfig } from './createRollupConfig';\nimport { existsSync } from 'fs';\n\n// check for custom example-ts.config.js\nlet exportTsConfig = {\n  rollup(config: RollupOptions, _options: ExportTsOptions): RollupOptions {\n    return config;\n  },\n};\n\nif (existsSync(paths.appConfig)) {\n  exportTsConfig = require(paths.appConfig);\n}\n\nexport async function createBuildConfigs(\n  opts: NormalizedOpts\n): Promise<Array<RollupOptions & { output: OutputOptions }>> {\n  const allInputs = concatAllArray(\n    opts.input.map((input: string) =>\n      createAllFormats(opts, input).map(\n        (options: ExportTsOptions, index: number) => ({\n          ...options,\n          // We want to know if this is the first run for each entryfile\n          // for certain plugins (e.g. css)\n          writeMeta: index === 0,\n        })\n      )\n    )\n  );\n\n  return await Promise.all(\n    allInputs.map(async (options: ExportTsOptions, index: number) => {\n      // pass the full rollup config to export-ts.config.js override\n      const config = await createRollupConfig(options, index);\n      return exportTsConfig.rollup(config, options);\n    })\n  );\n}\n\nfunction createAllFormats(\n  opts: NormalizedOpts,\n  input: string\n): [ExportTsOptions, ...ExportTsOptions[]] {\n  return [\n    opts.format.includes('cjs') && {\n      ...opts,\n      format: 'cjs',\n      env: 'development',\n      input,\n    },\n    opts.format.includes('cjs') && {\n      ...opts,\n      format: 'cjs',\n      env: 'production',\n      input,\n    },\n    opts.format.includes('esm') && { ...opts, format: 'esm', input },\n    opts.format.includes('umd') && {\n      ...opts,\n      format: 'umd',\n      env: 'development',\n      input,\n    },\n    opts.format.includes('umd') && {\n      ...opts,\n      format: 'umd',\n      env: 'production',\n      input,\n    },\n    opts.format.includes('system') && {\n      ...opts,\n      format: 'system',\n      env: 'development',\n      input,\n    },\n    opts.format.includes('system') && {\n      ...opts,\n      format: 'system',\n      env: 'production',\n      input,\n    },\n  ].filter(Boolean) as [ExportTsOptions, ...ExportTsOptions[]];\n}\n","import { Config } from '@jest/types';\n\nexport type JestConfigOptions = Partial<Config.InitialOptions>;\n\nexport function createJestConfig(\n  _: (relativePath: string) => void,\n  rootDir: string\n): JestConfigOptions {\n  const config: JestConfigOptions = {\n    transform: {\n      '.(ts|tsx)$': require.resolve('ts-jest/dist'),\n      '.(js|jsx)$': require.resolve('babel-jest'), // jest's default\n    },\n    transformIgnorePatterns: ['[/\\\\\\\\]node_modules[/\\\\\\\\].+\\\\.(js|jsx)$'],\n    moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],\n    collectCoverageFrom: ['src/**/*.{ts,tsx,js,jsx}'],\n    testMatch: ['<rootDir>/**/*.(spec|test).{ts,tsx,js,jsx}'],\n    testURL: 'http://localhost',\n    rootDir,\n    watchPlugins: [\n      require.resolve('jest-watch-typeahead/filename'),\n      require.resolve('jest-watch-typeahead/testname'),\n    ],\n  };\n\n  return config;\n}\n","import fs from 'fs-extra';\nimport path from 'path';\nimport { CLIEngine } from 'eslint';\nimport { PackageJson } from './types';\nimport { getReactVersion } from './utils';\n\ninterface CreateEslintConfigArgs {\n  pkg: PackageJson;\n  rootDir: string;\n  writeFile: boolean;\n}\nexport async function createEslintConfig({\n  pkg,\n  rootDir,\n  writeFile,\n}: CreateEslintConfigArgs): Promise<CLIEngine.Options['baseConfig'] | void> {\n  const isReactLibrary = Boolean(getReactVersion(pkg));\n\n  const config = {\n    extends: [\n      'react-app',\n      'prettier/@typescript-eslint',\n      'plugin:prettier/recommended',\n    ],\n    settings: {\n      react: {\n        // Fix for https://github.com/jaredpalmer/tsdx/issues/279\n        version: isReactLibrary ? 'detect' : '999.999.999',\n      },\n    },\n  };\n\n  if (!writeFile) {\n    return config;\n  }\n\n  const file = path.join(rootDir, '.eslintrc.js');\n  try {\n    await fs.writeFile(\n      file,\n      `module.exports = ${JSON.stringify(config, null, 2)}`,\n      { flag: 'wx' }\n    );\n  } catch (e: any) {\n    if (e.code === 'EEXIST') {\n      console.error(\n        'Error trying to save the Eslint configuration file:',\n        `${file} already exists.`\n      );\n    } else {\n      console.error(e);\n    }\n\n    return config;\n  }\n}\n","import { InstallCommand } from './getInstallCmd';\n\nexport default function getInstallArgs(\n  cmd: InstallCommand,\n  packages: string[]\n) {\n  switch (cmd) {\n    case 'npm':\n      return ['install', ...packages, '--save-dev'];\n    case 'yarn':\n      return ['add', ...packages, '--dev'];\n  }\n}\n","import fs from 'fs-extra';\n\nimport { paths } from './constants';\nimport progressEstimator from 'progress-estimator';\n\nexport async function createProgressEstimator() {\n  await fs.ensureDir(paths.progressEstimatorCache);\n  return progressEstimator({\n    // All configuration keys are optional, but it's recommended to specify a storage location.\n    storagePath: paths.progressEstimatorCache,\n  });\n}\n","import { Template } from './template';\n\nconst basicTemplate: Template = {\n  name: 'basic',\n  dependencies: [\n    'husky',\n    'export-ts',\n    'tslib',\n    'typescript',\n    'size-limit',\n    '@size-limit/preset-small-lib',\n  ],\n  packageJson: {\n    // name: safeName,\n    version: '0.1.0',\n    license: 'MIT',\n    // author: author,\n    main: './dist/index.cjs',\n    module: './dist/index.mjs',\n    exports: {\n      './package.json': './package.json',\n      '.': {\n        import: './dist/index.mjs',\n        require: './dist/index.cjs',\n      },\n    },\n    // module: `dist/${safeName}.mjs`,\n    typings: `dist/index.d.ts`,\n    files: ['dist', 'src'],\n    engines: {\n      node: '>=14',\n    },\n    scripts: {\n      start: 'export-ts watch',\n      build: 'export-ts build',\n      test: 'export-ts test',\n      posttest: 'node test/import.mjs && node test/require.cjs',\n      lint: 'export-ts lint',\n      prepare: 'export-ts build',\n      size: 'size-limit',\n      analyze: 'size-limit --why',\n    },\n    peerDependencies: {},\n    husky: {\n      hooks: {\n        'pre-commit': 'export-ts lint',\n      },\n    },\n    prettier: {\n      printWidth: 80,\n      semi: true,\n      singleQuote: true,\n      trailingComma: 'es5',\n    },\n  },\n};\n\nexport default basicTemplate;\n","import { Template } from './template';\n\nimport basicTemplate from './basic';\nimport { PackageJson } from 'type-fest';\n\nconst reactTemplate: Template = {\n  name: 'react',\n  dependencies: [\n    ...basicTemplate.dependencies,\n    '@types/react',\n    '@types/react-dom',\n    'react',\n    'react-dom',\n  ],\n  packageJson: {\n    ...basicTemplate.packageJson,\n    peerDependencies: {\n      react: '>=16',\n    },\n    scripts: {\n      ...basicTemplate.packageJson.scripts,\n      test: 'export-ts test',\n    } as PackageJson['scripts'],\n  },\n};\n\nexport default reactTemplate;\n","import { Template } from './template';\nimport reactTemplate from './react';\nimport { PackageJson } from 'type-fest';\n\nconst storybookTemplate: Template = {\n  dependencies: [\n    ...reactTemplate.dependencies,\n    '@babel/core',\n    '@storybook/addon-essentials',\n    '@storybook/addon-links',\n    '@storybook/addon-info',\n    '@storybook/addons',\n    '@storybook/react',\n    'react-is',\n    'babel-loader',\n  ],\n  name: 'react-with-storybook',\n  packageJson: {\n    ...reactTemplate.packageJson,\n    scripts: {\n      ...reactTemplate.packageJson.scripts,\n      storybook: 'start-storybook -p 6006',\n      'build-storybook': 'build-storybook',\n    } as PackageJson['scripts'],\n  },\n};\n\nexport default storybookTemplate;\n","import reactTemplate from './react';\nimport basicTemplate from './basic';\nimport storybookTemplate from './react-with-storybook';\n\nexport const templates = {\n  basic: basicTemplate,\n  react: reactTemplate,\n  'react-with-storybook': storybookTemplate,\n};\n","import { Template } from '../template';\n\ninterface ProjectArgs {\n  name: string;\n  author: string;\n}\nexport const composePackageJson =\n  (template: Template) =>\n  ({ name, author }: ProjectArgs) => {\n    return {\n      ...template.packageJson,\n      name,\n      author,\n      'size-limit': [\n        {\n          path: `dist/${name}.production.min.cjs`,\n          limit: '10 KB',\n        },\n        {\n          path: `dist/${name}.min.mjs`,\n          limit: '10 KB',\n        },\n      ],\n    };\n  };\n","import * as fs from 'fs-extra';\n\nimport { paths } from './constants';\n\n/*\n  This was originally needed because the default\n  tsconfig.compilerOptions.rootDir was set to './' instead of './src'.\n  Now that it's set to './src', this is now deprecated.\n  To ensure a stable upgrade path for users, leave the warning in for\n  6 months - 1 year, then change it to an error in a breaking bump and leave\n  that in for some time too.\n*/\nexport async function moveTypes() {\n  const appDistSrc = paths.appDist + '/src';\n\n  const pathExists = await fs.pathExists(appDistSrc);\n  if (!pathExists) return;\n\n  // see note above about deprecation window\n  console.warn(\n    '[export-ts]: Your rootDir is currently set to \"./\". Please change your ' +\n      'rootDir to \"./src\".\\n' +\n      'export-ts has deprecated setting tsconfig.compilerOptions.rootDir to ' +\n      '\"./\" as it caused buggy output for declarationMaps and more.\\n' +\n      'You may also need to change your include to remove \"test\", which also ' +\n      'caused declarations to be unnecessarily created for test files.'\n  );\n\n  // Move the type declarations to the base of the ./dist folder\n  await fs.copy(appDistSrc, paths.appDist, {\n    overwrite: true,\n  });\n  await fs.remove(appDistSrc);\n}\n","#!/usr/bin/env node\n\nimport sade from 'sade';\nimport glob from 'glob-promise';\nimport { rollup, watch, RollupWatchOptions, WatcherOptions } from 'rollup';\nimport chalk from 'chalk';\nimport jest from 'jest';\nimport { CLIEngine } from 'eslint';\nimport logError from './logError';\nimport path from 'path';\nimport execa from 'execa';\nimport shell from 'shelljs';\nimport ora from 'ora';\nimport semver from 'semver';\nimport { paths } from './constants';\nimport * as Messages from './messages';\nimport { createBuildConfigs } from './createBuildConfigs';\nimport { createJestConfig, JestConfigOptions } from './createJestConfig';\nimport { createEslintConfig } from './createEslintConfig';\nimport {\n  resolveApp,\n  safePackageName,\n  clearConsole,\n  getNodeEngineRequirement,\n} from './utils';\n// import { concatAllArray } from 'jpjs';\nimport getInstallCmd from './getInstallCmd';\nimport getInstallArgs from './getInstallArgs';\n\nimport Input from 'enquirer/lib/prompts/input.js';\nimport Select from 'enquirer/lib/prompts/select.js';\n\nimport {\n  PackageJson,\n  WatchOpts,\n  BuildOpts,\n  ModuleFormat,\n  NormalizedOpts,\n} from './types';\nimport { createProgressEstimator } from './createProgressEstimator';\nimport { templates } from './templates';\nimport { composePackageJson } from './templates/utils';\nimport * as deprecated from './deprecated';\nimport fs from 'fs-extra';\nimport { readFileSync } from 'fs';\nimport { stat } from 'fs/promises';\n// import { runTsc } from './plugins/simple-ts';\n\nexport * from './errors';\n\nconst prog = sade('export-ts');\n\nlet appPackageJson: PackageJson;\ntry {\n  appPackageJson = JSON.parse(readFileSync(paths.appPackageJson, 'utf-8'));\n} catch (e) {}\n\nexport const isDir = (name: string) =>\n  stat(name)\n    .then((stats) => stats.isDirectory())\n    .catch(() => false);\n\nexport const isFile = (name: string) =>\n  stat(name)\n    .then((stats) => stats.isFile())\n    .catch(() => false);\n\nasync function jsOrTs(filename: string) {\n  const extension = (await isFile(resolveApp(filename + '.ts')))\n    ? '.ts'\n    : (await isFile(resolveApp(filename + '.tsx')))\n    ? '.tsx'\n    : (await isFile(resolveApp(filename + '.jsx')))\n    ? '.jsx'\n    : '.js';\n\n  return resolveApp(`${filename}${extension}`);\n}\n\nasync function getInputs(\n  entries?: string | string[],\n  source?: string\n): Promise<string[]> {\n  let entryList = [];\n  if (entries) {\n    if (!Array.isArray(entries)) {\n      entryList.push(entries);\n    } else {\n      entryList.push(...entries);\n    }\n  } else {\n    if (source) {\n      const appDir = resolveApp(source);\n      entryList.push(appDir);\n    } else {\n      const srcExists = await isDir(resolveApp('src'));\n      if (srcExists) {\n        const entryPoint = await jsOrTs('src/index');\n        entryList.push(entryPoint);\n      }\n    }\n  }\n\n  const inputPromises = entryList.map(async (file) => await glob(file));\n  const inputs = await Promise.all(inputPromises);\n  return inputs.flat();\n}\n\nprog\n  .command('create <pkg>')\n  .describe('Create a new package with ')\n  .example('create mypackage')\n  .option(\n    '--template',\n    `Specify a template. Allowed choices: [${Object.keys(templates).join(\n      ', '\n    )}]`\n  )\n  .example('create --template react mypackage')\n  .action(async (pkg: string, opts: any) => {\n    console.log(\n      chalk.blue(`\n::::::::::: ::::::::  :::::::::  :::    :::\n    :+:    :+:    :+: :+:    :+: :+:    :+:\n    +:+    +:+        +:+    +:+  +:+  +:+\n    +#+    +#++:++#++ +#+    +:+   +#++:+\n    +#+           +#+ +#+    +#+  +#+  +#+\n    #+#    #+#    #+# #+#    #+# #+#    #+#\n    ###     ########  #########  ###    ###\n`)\n    );\n    const bootSpinner = ora(`Creating ${chalk.bold.green(pkg)}...`);\n    let template;\n    // Helper fn to prompt the user for a different\n    // folder name if one already exists\n    async function getProjectPath(projectPath: string): Promise<string> {\n      const exists = await fs.pathExists(projectPath);\n      if (!exists) {\n        return projectPath;\n      }\n\n      bootSpinner.fail(`Failed to create ${chalk.bold.red(pkg)}`);\n      const prompt = new Input({\n        message: `A folder named ${chalk.bold.red(\n          pkg\n        )} already exists! ${chalk.bold('Choose a different name')}`,\n        initial: pkg + '-1',\n        result: (v: string) => v.trim(),\n      });\n\n      pkg = await prompt.run();\n      projectPath = (await fs.realpath(process.cwd())) + '/' + pkg;\n      bootSpinner.start(`Creating ${chalk.bold.green(pkg)}...`);\n      return await getProjectPath(projectPath); // recursion!\n    }\n\n    try {\n      // get the project path\n      const realPath = await fs.realpath(process.cwd());\n      let projectPath = await getProjectPath(realPath + '/' + pkg);\n\n      const prompt = new Select({\n        message: 'Choose a template',\n        choices: Object.keys(templates),\n      });\n\n      if (opts.template) {\n        template = opts.template.trim();\n        if (!prompt.choices.includes(template)) {\n          bootSpinner.fail(`Invalid template ${chalk.bold.red(template)}`);\n          template = await prompt.run();\n        }\n      } else {\n        template = await prompt.run();\n      }\n\n      bootSpinner.start();\n      // copy the template\n      await fs.copy(\n        path.resolve(__dirname, `../templates/${template}`),\n        projectPath,\n        {\n          overwrite: true,\n        }\n      );\n      // fix gitignore\n      await fs.move(\n        path.resolve(projectPath, './gitignore'),\n        path.resolve(projectPath, './.gitignore')\n      );\n\n      // update license year and author\n      let license: string = await fs.readFile(\n        path.resolve(projectPath, 'LICENSE'),\n        { encoding: 'utf-8' }\n      );\n\n      license = license.replace(/<year>/, `${new Date().getFullYear()}`);\n\n      // attempt to automatically derive author name\n      let author = getAuthorName();\n\n      if (!author) {\n        bootSpinner.stop();\n        const licenseInput = new Input({\n          name: 'author',\n          message: 'Who is the package author?',\n        });\n        author = await licenseInput.run();\n        setAuthorName(author);\n        bootSpinner.start();\n      }\n\n      license = license.replace(/<author>/, author.trim());\n\n      await fs.writeFile(path.resolve(projectPath, 'LICENSE'), license, {\n        encoding: 'utf-8',\n      });\n\n      const templateConfig = templates[template as keyof typeof templates];\n      const generatePackageJson = composePackageJson(templateConfig);\n\n      // Install deps\n      process.chdir(projectPath);\n      const safeName = safePackageName(pkg);\n      const pkgJson = generatePackageJson({ name: safeName, author });\n\n      const nodeVersionReq = getNodeEngineRequirement(pkgJson);\n      if (\n        nodeVersionReq &&\n        !semver.satisfies(process.version, nodeVersionReq)\n      ) {\n        bootSpinner.fail(Messages.incorrectNodeVersion(nodeVersionReq));\n        process.exit(1);\n      }\n\n      await fs.outputJSON(path.resolve(projectPath, 'package.json'), pkgJson);\n      bootSpinner.succeed(`Created ${chalk.bold.green(pkg)}`);\n      await Messages.start(pkg);\n    } catch (error) {\n      bootSpinner.fail(`Failed to create ${chalk.bold.red(pkg)}`);\n      logError(error);\n      process.exit(1);\n    }\n\n    const templateConfig = templates[template as keyof typeof templates];\n    const { dependencies: deps } = templateConfig;\n\n    const installSpinner = ora(Messages.installing(deps.sort())).start();\n    try {\n      const cmd = await getInstallCmd();\n      await execa(cmd, getInstallArgs(cmd, deps));\n      installSpinner.succeed('Installed dependencies');\n      console.log(await Messages.start(pkg));\n    } catch (error) {\n      installSpinner.fail('Failed to install dependencies');\n      logError(error);\n      process.exit(1);\n    }\n  });\n\nprog\n  .command('watch')\n  .describe('Rebuilds on any change')\n  .option('--entry, -i', 'Entry module')\n  .example('watch --entry src/foo.tsx')\n  .option('--target', 'Specify your target environment', 'browser')\n  .example('watch --target node')\n  .option('--name', 'Specify name exposed in UMD builds')\n  .example('watch --name Foo')\n  .option('--format', 'Specify module format(s)', 'cjs,esm')\n  .example('watch --format cjs,esm')\n  .option(\n    '--verbose',\n    'Keep outdated console output in watch mode instead of clearing the screen'\n  )\n  .example('watch --verbose')\n  .option('--noClean', \"Don't clean the dist folder\")\n  .example('watch --noClean')\n  .option('--tsconfig', 'Specify custom tsconfig path')\n  .example('watch --tsconfig ./tsconfig.foo.json')\n  .option('--onFirstSuccess', 'Run a command on the first successful build')\n  .example('watch --onFirstSuccess \"echo The first successful build!\"')\n  .option('--onSuccess', 'Run a command on a successful build')\n  .example('watch --onSuccess \"echo Successful build!\"')\n  .option('--onFailure', 'Run a command on a failed build')\n  .example('watch --onFailure \"The build failed!\"')\n  .option('--transpileOnly', 'Skip type checking')\n  .example('watch --transpileOnly')\n  .option('--extractErrors', 'Extract invariant errors to ./errors/codes.json.')\n  .example('watch --extractErrors')\n  .action(async (dirtyOpts: WatchOpts) => {\n    const opts = await normalizeOpts(dirtyOpts);\n    const buildConfigs = await createBuildConfigs(opts);\n    if (!opts.noClean) {\n      await cleanDistFolder();\n    }\n\n    if (opts.format.includes('cjs')) {\n      await writeCjsEntryFile(opts.name);\n    }\n    if (opts.format.includes('esm')) {\n      await writeMjsEntryFile(opts.name);\n    }\n\n    await cleanOldJS();\n\n    type Killer = execa.ExecaChildProcess | null;\n\n    let firstTime = true;\n    let successKiller: Killer = null;\n    let failureKiller: Killer = null;\n\n    function run(command?: string) {\n      if (!command) {\n        return null;\n      }\n\n      const [exec, ...args] = command.split(' ');\n      return execa(exec, args, {\n        stdio: 'inherit',\n      });\n    }\n\n    function killHooks() {\n      return Promise.all([\n        successKiller ? successKiller.kill('SIGTERM') : null,\n        failureKiller ? failureKiller.kill('SIGTERM') : null,\n      ]);\n    }\n\n    const spinner = ora().start();\n    watch(\n      (buildConfigs as RollupWatchOptions[]).map((inputOptions) => ({\n        watch: {\n          silent: true,\n          include: ['src/**'],\n          exclude: ['node_modules/**'],\n        } as WatcherOptions,\n        ...inputOptions,\n      }))\n    ).on('event', async (event) => {\n      // clear previous onSuccess/onFailure hook processes so they don't pile up\n      await killHooks();\n\n      if (event.code === 'START') {\n        if (!opts.verbose) {\n          clearConsole();\n        }\n        spinner.start(chalk.bold.cyan('Compiling modules...'));\n      }\n      if (event.code === 'ERROR') {\n        spinner.fail(chalk.bold.red('Failed to compile'));\n        logError(event.error);\n        failureKiller = run(opts.onFailure);\n      }\n      if (event.code === 'END') {\n        spinner.succeed(chalk.bold.green('Compiled successfully'));\n        console.log(`\n  ${chalk.dim('Watching for changes')}\n`);\n\n        try {\n          await deprecated.moveTypes();\n\n          if (firstTime && opts.onFirstSuccess) {\n            firstTime = false;\n            run(opts.onFirstSuccess);\n          } else {\n            successKiller = run(opts.onSuccess);\n          }\n        } catch (_error) {}\n      }\n    });\n  });\n\nprog\n  .command('build')\n  .describe('Build your project once and exit')\n  .option('--entry, -i', 'Entry module')\n  .example('build --entry src/foo.tsx')\n  .option('--target', 'Specify your target environment', 'browser')\n  .example('build --target node')\n  .option('--name', 'Specify name exposed in UMD builds')\n  .example('build --name Foo')\n  .option('--format', 'Specify module format(s)', 'cjs,esm')\n  .example('build --format cjs,esm')\n  .option('--legacy', 'Babel transpile and emit ES5.')\n  .example('build --legacy')\n  .option('--tsconfig', 'Specify custom tsconfig path')\n  .example('build --tsconfig ./tsconfig.foo.json')\n  .option('--transpileOnly', 'Skip type checking')\n  .example('build --transpileOnly')\n  .option(\n    '--extractErrors',\n    'Extract errors to ./errors/codes.json and provide a url for decoding.'\n  )\n  .example(\n    'build --extractErrors=https://reactjs.org/docs/error-decoder.html?invariant='\n  )\n  .action(async (dirtyOpts: BuildOpts) => {\n    const opts = await normalizeOpts(dirtyOpts);\n    const buildConfigs = await createBuildConfigs(opts);\n\n    console.log('> Cleaning dist/.');\n    await cleanDistFolder();\n    // await runTsc();\n\n    const progressIndicator = await createProgressEstimator();\n    if (opts.format.includes('cjs')) {\n      await progressIndicator(\n        writeCjsEntryFile(opts.name).catch(logError),\n        'Creating CJS entry file'\n      );\n    }\n    if (opts.format.includes('esm')) {\n      await progressIndicator(\n        writeMjsEntryFile(opts.name).catch(logError),\n        'Creating MJS entry file'\n      );\n    }\n    try {\n      await progressIndicator(\n        Promise.all(\n          buildConfigs.map(async (buildConfig) => {\n            const bundle = await rollup(buildConfig);\n            await bundle.write(buildConfig.output);\n          })\n        ),\n        'JS ➡ JS: Compressing and transforming emitted TypeScript output.'\n      );\n      /**\n       * Remove old index.js.\n       */\n      await cleanOldJS();\n    } catch (error) {\n      logError(error);\n      process.exit(1);\n    }\n  });\n\nasync function normalizeOpts(opts: WatchOpts): Promise<NormalizedOpts> {\n  return {\n    ...opts,\n    name: opts.name || appPackageJson.name,\n    input: await getInputs(opts.entry, appPackageJson.source),\n    format: opts.format.split(',').map((format: string) => {\n      if (format === 'es') {\n        return 'esm';\n      }\n      return format;\n    }) as [ModuleFormat, ...ModuleFormat[]],\n  };\n}\n\nasync function cleanOldJS() {\n  const progressIndicator = await createProgressEstimator();\n  const oldJS = await glob(`${paths.appDist}/**/*.js`);\n  // console.log({ oldJS });\n  await progressIndicator(\n    Promise.all(oldJS.map(async (file: string) => await fs.unlink(file))),\n    'Removing original emitted TypeScript output (dist/**/*.js).'\n  );\n}\n\nasync function cleanDistFolder() {\n  await fs.remove(paths.appDist);\n}\n\nfunction writeCjsEntryFile(name: string) {\n  const safeName = safePackageName(name);\n  /**\n   * After an hour of tinkering, this is the *only* way to write this code that\n   * will not break Rollup (by pulling process.env.NODE_ENV out with\n   * destructuring).\n   */\n  const contents = `#!/usr/bin/env node\n\n'use strict';\nmodule.exports = require('./${safeName}.production.min.cjs');\n`;\n\n  return fs.outputFile(path.join(paths.appDist, 'index.cjs'), contents);\n}\n\nfunction writeMjsEntryFile(name: string) {\n  const contents = `#!/usr/bin/env node\n\nexport { default } from './${name}.min.mjs';\nexport * from './${name}.min.mjs';\n`;\n\n  return fs.outputFile(path.join(paths.appDist, 'index.mjs'), contents);\n}\n\nfunction getAuthorName() {\n  let author = '';\n\n  author = shell\n    .exec('npm config get init-author-name', { silent: true })\n    .stdout.trim();\n  if (author) return author;\n\n  author = shell\n    .exec('git config --global user.name', { silent: true })\n    .stdout.trim();\n  if (author) {\n    setAuthorName(author);\n    return author;\n  }\n\n  author = shell\n    .exec('npm config get init-author-email', { silent: true })\n    .stdout.trim();\n  if (author) return author;\n\n  author = shell\n    .exec('git config --global user.email', { silent: true })\n    .stdout.trim();\n  if (author) return author;\n\n  return author;\n}\n\nfunction setAuthorName(author: string) {\n  shell.exec(`npm config set init-author-name \"${author}\"`, { silent: true });\n}\n\nprog\n  .command('test')\n  .describe('Run jest test runner. Passes through all flags directly to Jest')\n  .action(async (opts: { config?: string }) => {\n    // Do this as the first thing so that any code reading it knows the right env.\n    process.env.BABEL_ENV = 'test';\n    process.env.NODE_ENV = 'test';\n    // Makes the script crash on unhandled rejections instead of silently\n    // ignoring them. In the future, promise rejections that are not handled will\n    // terminate the Node.js process with a non-zero exit code.\n    process.on('unhandledRejection', (err) => {\n      throw err;\n    });\n\n    const argv = process.argv.slice(2);\n    let jestConfig: JestConfigOptions = {\n      ...createJestConfig(\n        (relativePath) => path.resolve(__dirname, '..', relativePath),\n        opts.config ? path.dirname(opts.config) : paths.appRoot\n      ),\n      ...appPackageJson.jest,\n    };\n\n    // Allow overriding with jest.config\n    const defaultPathExists = await fs.pathExists(paths.jestConfig);\n    if (opts.config || defaultPathExists) {\n      const jestConfigPath = resolveApp(opts.config || paths.jestConfig);\n      const jestConfigContents: JestConfigOptions = require(jestConfigPath);\n      jestConfig = { ...jestConfig, ...jestConfigContents };\n    }\n\n    // if custom path, delete the arg as it's already been merged\n    if (opts.config) {\n      let configIndex = argv.indexOf('--config');\n      if (configIndex !== -1) {\n        // case of \"--config path\", delete both args\n        argv.splice(configIndex, 2);\n      } else {\n        // case of \"--config=path\", only one arg to delete\n        const configRegex = /--config=.+/;\n        configIndex = argv.findIndex((arg) => arg.match(configRegex));\n        if (configIndex !== -1) {\n          argv.splice(configIndex, 1);\n        }\n      }\n    }\n\n    argv.push(\n      '--config',\n      JSON.stringify({\n        ...jestConfig,\n      })\n    );\n\n    const [, ...argsToPassToJestCli] = argv;\n    jest.run(argsToPassToJestCli);\n  });\n\nprog\n  .command('lint')\n  .describe('Run eslint with Prettier')\n  .example('lint src test')\n  .option('--fix', 'Fixes fixable errors and warnings')\n  .example('lint src test --fix')\n  .option('--ignore-pattern', 'Ignore a pattern')\n  .example('lint src test --ignore-pattern test/foobar.ts')\n  .option(\n    '--max-warnings',\n    'Exits with non-zero error code if number of warnings exceed this number',\n    Infinity\n  )\n  .example('lint src test --max-warnings 10')\n  .option('--write-file', 'Write the config file locally')\n  .example('lint --write-file')\n  .option('--report-file', 'Write JSON report to file locally')\n  .example('lint --report-file eslint-report.json')\n  .action(\n    async (opts: {\n      fix: boolean;\n      'ignore-pattern': string;\n      'write-file': boolean;\n      'report-file': string;\n      'max-warnings': number;\n      _: string[];\n    }) => {\n      if (opts['_'].length === 0 && !opts['write-file']) {\n        const defaultInputs = ['src', 'test'].filter(fs.existsSync);\n        opts['_'] = defaultInputs;\n        console.log(\n          chalk.yellow(\n            `Defaulting to \"export-ts lint ${defaultInputs.join(' ')}\"`,\n            '\\nYou can override this in the package.json scripts, like \"lint\": \"export-ts lint src otherDir\"'\n          )\n        );\n      }\n\n      const config = await createEslintConfig({\n        pkg: appPackageJson,\n        rootDir: paths.appRoot,\n        writeFile: opts['write-file'],\n      });\n\n      const cli = new CLIEngine({\n        baseConfig: {\n          ...config,\n          ...appPackageJson.eslint,\n        },\n        extensions: ['.ts', '.tsx', '.js', '.jsx'],\n        fix: opts.fix,\n        ignorePattern: opts['ignore-pattern'],\n      });\n      const report = cli.executeOnFiles(opts['_']);\n      if (opts.fix) {\n        CLIEngine.outputFixes(report);\n      }\n      console.log(cli.getFormatter()(report.results));\n      if (opts['report-file']) {\n        await fs.outputFile(\n          opts['report-file'],\n          cli.getFormatter('json')(report.results)\n        );\n      }\n      if (report.errorCount) {\n        process.exit(1);\n      }\n      if (report.warningCount > opts['max-warnings']) {\n        process.exit(1);\n      }\n    }\n  );\n\nprog.parse(process.argv);\n"],"names":["chalk","camelCase","path","fs","cmd","execa","Output.cmd","parse","traverse","pascalCase","createConfigItem","merge","createBabelInputPluginFactory","sep","resolve","ts","resolvePlugin","commonjs","json","typescript","DEFAULT_BABEL_EXTENSIONS","sourceMaps","terser","optimizeLodashImports","extname","existsSync","readFileSync","resolveExports","concatAllArray","progressEstimator","sade","stat","glob","ora","Input","Select","semver","Messages.incorrectNodeVersion","Messages.start","Messages.installing","watch","deprecated.moveTypes","rollup","shell","jest","CLIEngine"],"mappings":"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"}