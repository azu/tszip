"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("fs-extra/lib/index.js"),e=require("@babel/parser/lib/index.js"),t=require("@babel/traverse/lib/index.js"),n=require("fs-extra/lib/index.js"),o=require("path"),a=require("camelcase/index.js"),s=require("pascal-case/dist/index.js");function i(r){return r&&"object"==typeof r&&"default"in r?r:{"default":r}}var u=i(r),p=i(t),l=i(n),c=i(o),f=i(a);function d(r){const e={},t=Object.keys(r);for(const n of t)e[r[n]]=n;return e}function g(r){switch(r.type){case"StringLiteral":case"Literal":return r.value;case"BinaryExpression":if("+"!==r.operator)throw new Error("Unsupported binary operator "+r.operator);return g(r.left)+g(r.right);default:throw new Error("Unsupported type "+r.type)}}const w=l.default.realpathSync(process.cwd()),h=function(r){return c.default.resolve(w,r)},m={appPackageJson:h("package.json"),tsconfigJson:h("tsconfig.json"),testsSetup:h("test/setupTests.ts"),appRoot:h("."),appSrc:h("src"),appErrorsJson:h("errors/codes.json"),appErrors:h("errors"),appDist:h("dist"),appConfig:h("export-ts.config.js"),jestConfig:h("jest.config.js"),progressEstimatorCache:h("node_modules/.cache/.progress-estimator")},E={sourceType:"module",plugins:["classProperties","flow","jsx","trailingFunctionCommas","objectRestSpread"]};exports.extractErrors=async function(r){if(!r||!r.errorMapFilePath)throw new Error("Missing options. Ensure you pass an object with `errorMapFilePath`.");if(!r.name||!r.name)throw new Error("Missing options. Ensure you pass --name flag to export-ts");const t=r.errorMapFilePath;let n;try{const r=await u.default.readFile(t,"utf-8");n=JSON.parse(r)}catch(r){n={}}const o=Object.keys(n);let a;function i(r){const t=e.parse(r,E);p.default(t,{CallExpression:{exit(r){var e;r.get("callee").isIdentifier({name:"invariant"})&&(e=g(r.node.arguments[1]),n.hasOwnProperty(e)||(n[e]=""+a++))}}})}return a=0===o.length?0:Math.max.apply(null,o)+1,n=d(n),async function(e){i(e),await async function(){const e=s.pascalCase((r=>f.default((r=>r.replace(/^@.*\//,""))(r).toLowerCase().replace(/((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,"")))(r.name));await u.default.ensureDir(m.appErrors),await u.default.writeFile(t,JSON.stringify(d(n),null,2)+"\n","utf-8"),await u.default.writeFile(m.appErrors+"/ErrorDev.js","\nfunction ErrorDev(message) {\n  const error = new Error(message);\n  error.name = 'Invariant Violation';\n  return error;\n}\n\nexport default ErrorDev;\n      ","utf-8"),await u.default.writeFile(m.appErrors+"/ErrorProd.js",`\nfunction ErrorProd(code) {\n  // TODO: replace this URL with yours\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return new Error(\n    \`Minified ${e} error #\${code}; visit \${url} for the full message or \` +\n      'use the non-minified dev environment for full errors and additional ' +\n      'helpful warnings. '\n  );\n}\n\nexport default ErrorProd;\n`,"utf-8")}()}};
//# sourceMappingURL=extractErrors.cjs.map
