{"version":3,"file":"evalToString.cjs","sources":["../../src/errors/evalToString.ts"],"sourcesContent":["// largely borrowed from https://github.com/facebook/react/blob/8b2d3783e58d1acea53428a10d2035a8399060fe/scripts/shared/evalToString.js\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function evalToString(ast: any): string {\n  switch (ast.type) {\n    case 'StringLiteral':\n    case 'Literal': // ESLint\n      return ast.value;\n    case 'BinaryExpression': // `+`\n      if (ast.operator !== '+') {\n        throw new Error('Unsupported binary operator ' + ast.operator);\n      }\n      return evalToString(ast.left) + evalToString(ast.right);\n    default:\n      throw new Error('Unsupported type ' + ast.type);\n  }\n}\n"],"names":["evalToString","ast","type","value","operator","Error","left","right"],"mappings":"kGAQgBA,EAAaC,GAC3B,OAAQA,EAAIC,MACV,IAAK,gBACL,IAAK,UACH,OAAOD,EAAIE,MACb,IAAK,mBACH,GAAqB,MAAjBF,EAAIG,SACN,MAAM,IAAIC,MAAM,+BAAiCJ,EAAIG,UAEvD,OAAOJ,EAAaC,EAAIK,MAAQN,EAAaC,EAAIM,OACnD,QACE,MAAM,IAAIF,MAAM,oBAAsBJ,EAAIC"}