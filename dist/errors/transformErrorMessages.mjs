import r from"fs";import{addDefault as e}from"@babel/helper-module-imports/lib/index.js";import t from"fs-extra/lib/index.js";import o from"path";import"camelcase/index.js";function n(r){switch(r.type){case"StringLiteral":case"Literal":return r.value;case"BinaryExpression":if("+"!==r.operator)throw new Error("Unsupported binary operator "+r.operator);return n(r.left)+n(r.right);default:throw new Error("Unsupported type "+r.type)}}const s=t.realpathSync(process.cwd()),a=function(r){return o.resolve(s,r)},i={appPackageJson:a("package.json"),tsconfigJson:a("tsconfig.json"),testsSetup:a("test/setupTests.ts"),appRoot:a("."),appSrc:a("src"),appErrorsJson:a("errors/codes.json"),appErrors:a("errors"),appDist:a("dist"),appConfig:a("export-ts.config.js"),jestConfig:a("jest.config.js"),progressEstimatorCache:a("node_modules/.cache/.progress-estimator")};function p(t){const o=t.types,s=o.identifier("__DEV__");return{visitor:{CallExpression(t,a){const p=t.node,c=a.opts.noMinify;if(t.get("callee").isIdentifier({name:"invariant"})){const a=p.arguments[0],m=n(p.arguments[1]),l=Array.from(p.arguments.slice(2)),f=m.split("%s").map((r=>o.templateElement({raw:r,cooked:String.raw({raw:r})}))),u=e(t,i.appRoot+"/errors/ErrorDev.js",{nameHint:"InvariantError"}),d=o.throwStatement(o.callExpression(u,[o.templateLiteral(f,l)]));if(c)return void t.replaceWith(o.ifStatement(o.unaryExpression("!",a),o.blockStatement([d])));let E=function(r){const e={},t=Object.keys(r);for(const o of t)e[r[o]]=o;return e}(JSON.parse(r.readFileSync(i.appErrorsJson,"utf-8")))[m];if(void 0===E)return t.replaceWith(o.ifStatement(o.unaryExpression("!",a),o.blockStatement([d]))),void t.addComment("leading","FIXME (minify-errors-in-prod): Unminified error message in production build!");E=parseInt(E,10);const g=e(t,i.appRoot+"/errors/ErrorProd.js",{nameHint:"InvariantErrorProd"}),S=o.throwStatement(o.callExpression(g,[o.numericLiteral(E),...l]));t.replaceWith(o.ifStatement(o.unaryExpression("!",a),o.blockStatement([o.ifStatement(s,o.blockStatement([d]),o.blockStatement([S]))])))}}}}}export default p;
//# sourceMappingURL=transformErrorMessages.mjs.map
