{"version":3,"file":"extractErrors.cjs","sources":["../../src/errors/invertObject.ts","../../src/errors/evalToString.ts","../../src/utils.ts","../../src/constants.ts","../../src/errors/extractErrors.ts"],"sourcesContent":["// largely borrowed from https://github.com/facebook/react/blob/8b2d3783e58d1acea53428a10d2035a8399060fe/scripts/error-codes/invertObject.js\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * turns\n *   { 'MUCH ERROR': '0', 'SUCH WRONG': '1' }\n * into\n *   { 0: 'MUCH ERROR', 1: 'SUCH WRONG' }\n */\n\ntype Dict = { [key: string]: any };\n\nexport function invertObject(targetObj: Dict) {\n  const result: Dict = {};\n  const mapKeys = Object.keys(targetObj);\n\n  for (const originalKey of mapKeys) {\n    const originalVal = targetObj[originalKey];\n\n    result[originalVal] = originalKey;\n  }\n\n  return result;\n}\n","// largely borrowed from https://github.com/facebook/react/blob/8b2d3783e58d1acea53428a10d2035a8399060fe/scripts/shared/evalToString.js\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function evalToString(ast: any): string {\n  switch (ast.type) {\n    case 'StringLiteral':\n    case 'Literal': // ESLint\n      return ast.value;\n    case 'BinaryExpression': // `+`\n      if (ast.operator !== '+') {\n        throw new Error('Unsupported binary operator ' + ast.operator);\n      }\n      return evalToString(ast.left) + evalToString(ast.right);\n    default:\n      throw new Error('Unsupported type ' + ast.type);\n  }\n}\n","import fs from 'fs-extra';\nimport path from 'path';\nimport camelCase from 'camelcase';\n\nimport { PackageJson } from './types';\n\n// Remove the package name scope if it exists\nexport const removeScope = (name: string) => name.replace(/^@.*\\//, '');\n\n// UMD-safe package name\nexport const safeVariableName = (name: string) =>\n  camelCase(\n    removeScope(name)\n      .toLowerCase()\n      .replace(/((^[^a-zA-Z]+)|[^\\w.-])|([^a-zA-Z0-9]+$)/g, '')\n  );\n\nexport const safePackageName = (name: string) =>\n  name\n    .toLowerCase()\n    .replace(/(^@.*\\/)|((^[^a-zA-Z]+)|[^\\w.-])|([^a-zA-Z0-9]+$)/g, '');\n\nexport const external = (id: string) =>\n  !id.startsWith('.') && !path.isAbsolute(id);\n\n// Make sure any symlinks in the project folder are resolved:\n// https://github.com/facebookincubator/create-react-app/issues/637\nexport const appDirectory = fs.realpathSync(process.cwd());\nexport const resolveApp = function (relativePath: string) {\n  return path.resolve(appDirectory, relativePath);\n};\n\n// Taken from Create React App, react-dev-utils/clearConsole\n// @see https://github.com/facebook/create-react-app/blob/master/packages/react-dev-utils/clearConsole.js\nexport function clearConsole() {\n  process.stdout.write(\n    process.platform === 'win32' ? '\\x1B[2J\\x1B[0f' : '\\x1B[2J\\x1B[3J\\x1B[H'\n  );\n}\n\nexport function getReactVersion({\n  dependencies,\n  devDependencies,\n}: PackageJson) {\n  return (\n    (dependencies && dependencies.react) ||\n    (devDependencies && devDependencies.react)\n  );\n}\n\nexport function getNodeEngineRequirement({ engines }: PackageJson) {\n  return engines && engines.node;\n}\n","import { resolveApp } from './utils';\n\nexport const paths = {\n  appPackageJson: resolveApp('package.json'),\n  tsconfigJson: resolveApp('tsconfig.json'),\n  testsSetup: resolveApp('test/setupTests.ts'),\n  appRoot: resolveApp('.'),\n  appSrc: resolveApp('src'),\n  appErrorsJson: resolveApp('errors/codes.json'),\n  appErrors: resolveApp('errors'),\n  appDist: resolveApp('dist'),\n  appConfig: resolveApp('export-ts.config.js'),\n  jestConfig: resolveApp('jest.config.js'),\n  progressEstimatorCache: resolveApp('node_modules/.cache/.progress-estimator'),\n};\n","// largely borrowed from https://github.com/facebook/react/blob/8b2d3783e58d1acea53428a10d2035a8399060fe/scripts/error-codes/extract-errors.js\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs-extra';\nimport { parse, ParserOptions } from '@babel/parser';\nimport traverse from '@babel/traverse';\nimport { invertObject } from './invertObject';\nimport { evalToString } from './evalToString';\nimport { paths } from '../constants';\nimport { safeVariableName } from '../utils';\nimport { pascalCase } from 'pascal-case';\n\nconst babelParserOptions: ParserOptions = {\n  sourceType: 'module',\n  // As a parser, @babel/parser has its own options and we can't directly\n  // import/require a babel preset. It should be kept **the same** as\n  // the `babel-plugin-syntax-*` ones specified in\n  // https://github.com/facebook/fbjs/blob/master/packages/babel-preset-fbjs/configure.js\n  plugins: [\n    'classProperties',\n    'flow',\n    'jsx',\n    'trailingFunctionCommas',\n    'objectRestSpread',\n  ],\n} as ParserOptions; // workaround for trailingFunctionCommas syntax\n\nexport async function extractErrors(opts: any) {\n  if (!opts || !opts.errorMapFilePath) {\n    throw new Error(\n      'Missing options. Ensure you pass an object with `errorMapFilePath`.'\n    );\n  }\n\n  if (!opts.name || !opts.name) {\n    throw new Error(\n      'Missing options. Ensure you pass --name flag to export-ts'\n    );\n  }\n\n  const errorMapFilePath = opts.errorMapFilePath;\n  let existingErrorMap: any;\n  try {\n    /**\n     * Using `fs.readFile` instead of `require` here, because `require()` calls\n     * are cached, and the cache map is not properly invalidated after file\n     * changes.\n     */\n    const fileContents = await fs.readFile(errorMapFilePath, 'utf-8');\n    existingErrorMap = JSON.parse(fileContents);\n  } catch (e) {\n    existingErrorMap = {};\n  }\n\n  const allErrorIDs = Object.keys(existingErrorMap);\n  let currentID: any;\n\n  if (allErrorIDs.length === 0) {\n    // Map is empty\n    currentID = 0;\n  } else {\n    currentID = Math.max.apply(null, allErrorIDs as any) + 1;\n  }\n\n  // Here we invert the map object in memory for faster error code lookup\n  existingErrorMap = invertObject(existingErrorMap);\n\n  function transform(source: string) {\n    const ast = parse(source, babelParserOptions);\n\n    traverse(ast, {\n      CallExpression: {\n        exit(astPath: any) {\n          if (astPath.get('callee').isIdentifier({ name: 'invariant' })) {\n            const node = astPath.node;\n\n            // error messages can be concatenated (`+`) at runtime, so here's a\n            // trivial partial evaluator that interprets the literal value\n            const errorMsgLiteral = evalToString(node.arguments[1]);\n            addToErrorMap(errorMsgLiteral);\n          }\n        },\n      },\n    });\n  }\n\n  function addToErrorMap(errorMsgLiteral: any) {\n    if (existingErrorMap.hasOwnProperty(errorMsgLiteral)) {\n      return;\n    }\n    existingErrorMap[errorMsgLiteral] = '' + currentID++;\n  }\n\n  async function flush() {\n    const prettyName = pascalCase(safeVariableName(opts.name));\n    // Ensure that the ./src/errors directory exists or create it\n    await fs.ensureDir(paths.appErrors);\n\n    // Output messages to ./errors/codes.json\n    await fs.writeFile(\n      errorMapFilePath,\n      JSON.stringify(invertObject(existingErrorMap), null, 2) + '\\n',\n      'utf-8'\n    );\n\n    // Write the error files, unless they already exist\n    await fs.writeFile(\n      paths.appErrors + '/ErrorDev.js',\n      `\nfunction ErrorDev(message) {\n  const error = new Error(message);\n  error.name = 'Invariant Violation';\n  return error;\n}\n\nexport default ErrorDev;\n      `,\n      'utf-8'\n    );\n\n    await fs.writeFile(\n      paths.appErrors + '/ErrorProd.js',\n      `\nfunction ErrorProd(code) {\n  // TODO: replace this URL with yours\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return new Error(\n    \\`Minified ${prettyName} error #$\\{code}; visit $\\{url} for the full message or \\` +\n      'use the non-minified dev environment for full errors and additional ' +\n      'helpful warnings. '\n  );\n}\n\nexport default ErrorProd;\n`,\n      'utf-8'\n    );\n  }\n\n  return async function extractErrors(source: any) {\n    transform(source);\n    await flush();\n  };\n}\n"],"names":["invertObject","targetObj","result","mapKeys","Object","keys","originalKey","evalToString","ast","type","value","operator","Error","left","right","relativePath","paths","appPackageJson","resolveApp","tsconfigJson","testsSetup","appRoot","appSrc","appErrorsJson","appErrors","appDist","appConfig","jestConfig","progressEstimatorCache","babelParserOptions","sourceType","plugins","async","opts","errorMapFilePath","name","existingErrorMap","fileContents","fs","readFile","JSON","parse","e","allErrorIDs","currentID","transform","source","traverse","CallExpression","exit","astPath","errorMsgLiteral","get","isIdentifier","node","arguments","hasOwnProperty","length","Math","max","apply","prettyName","pascalCase","toLowerCase","safeVariableName","ensureDir","writeFile","stringify","flush"],"mappings":"8XAkBgBA,EAAaC,GAC3B,MAAMC,EAAe,GACfC,EAAUC,OAAOC,KAAKJ,GAE5B,IAAK,MAAMK,KAAeH,EAGxBD,EAFoBD,EAAUK,IAERA,EAGxB,OAAOJ,WCpBOK,EAAaC,GAC3B,OAAQA,EAAIC,MACV,IAAK,gBACL,IAAK,UACH,OAAOD,EAAIE,MACb,IAAK,mBACH,GAAqB,MAAjBF,EAAIG,SACN,MAAM,IAAIC,MAAM,+BAAiCJ,EAAIG,UAEvD,OAAOJ,EAAaC,EAAIK,MAAQN,EAAaC,EAAIM,OACnD,QACE,MAAM,IAAIF,MAAM,oBAAsBJ,EAAIC,gECUZM,kCC3BvBC,EAAQ,CACnBC,eAAgBC,EAAW,gBAC3BC,aAAcD,EAAW,iBACzBE,WAAYF,EAAW,sBACvBG,QAASH,EAAW,KACpBI,OAAQJ,EAAW,OACnBK,cAAeL,EAAW,qBAC1BM,UAAWN,EAAW,UACtBO,QAASP,EAAW,QACpBQ,UAAWR,EAAW,uBACtBS,WAAYT,EAAW,kBACvBU,uBAAwBV,EAAW,4CCG/BW,EAAoC,CACxCC,WAAY,SAKZC,QAAS,CACP,kBACA,OACA,MACA,yBACA,2CAIGC,eAA6BC,GAClC,IAAKA,IAASA,EAAKC,iBACjB,MAAM,IAAItB,MACR,uEAIJ,IAAKqB,EAAKE,OAASF,EAAKE,KACtB,MAAM,IAAIvB,MACR,6DAIJ,MAAMsB,EAAmBD,EAAKC,iBAC9B,IAAIE,EACJ,IAME,MAAMC,QAAqBC,UAAGC,SAASL,EAAkB,SACzDE,EAAmBI,KAAKC,MAAMJ,GAC9B,MAAOK,GACPN,EAAmB,GAGrB,MAAMO,EAAcvC,OAAOC,KAAK+B,GAChC,IAAIQ,EAYJ,SAASC,EAAUC,GACjB,MAAMtC,EAAMiC,QAAMK,EAAQjB,GAE1BkB,UAASvC,EAAK,CACZwC,eAAgB,CACdC,KAAKC,GAcX,IAAuBC,EAbXD,EAAQE,IAAI,UAAUC,aAAa,CAAElB,KAAM,gBAahCgB,EARW5C,EAJX2C,EAAQI,KAIqBC,UAAU,IASxDnB,EAAiBoB,eAAeL,KAGpCf,EAAiBe,GAAmB,GAAKP,UAoD3C,OAnFEA,EAFyB,IAAvBD,EAAYc,OAEF,EAEAC,KAAKC,IAAIC,MAAM,KAAMjB,GAAsB,EAIzDP,EAAmBpC,EAAaoC,GA6EzBJ,eAA6Bc,GAClCD,EAAUC,SAlDZd,iBACE,MAAM6B,EAAaC,2BF3F6CpB,CAAAA,aAKpDP,iBAED4B,uEEoFmBC,CAAiB/B,EAAKE,aAE9CG,UAAG2B,UAAUjD,EAAMQ,iBAGnBc,UAAG4B,UACPhC,EACAM,KAAK2B,UAAUnE,EAAaoC,GAAmB,KAAM,GAAK,KAC1D,eAIIE,UAAG4B,UACPlD,EAAMQ,UAAY,eAClB,qKASA,eAGIc,UAAG4B,UACPlD,EAAMQ,UAAY,gBAClB,2SAQWqC,oNAQX,SAMIO"}