{"version":3,"file":"babelPluginExportTs.cjs","sources":["../src/babelPluginExportTs.ts"],"sourcesContent":["/**\n * @todo Do not use require.resolve so that the package can ship as ESM.\n */\n\nimport { createConfigItem } from '@babel/core';\nimport { createBabelInputPluginFactory } from '@rollup/plugin-babel';\nimport merge from 'lodash.merge';\n\nexport const isTruthy = (obj?: any) => {\n  if (!obj) {\n    return false;\n  }\n\n  return obj.constructor !== Object || Object.keys(obj).length > 0;\n};\n\n// replace lodash with lodash-es, but not lodash/fp\nconst replacements = [{ original: 'lodash(?!/fp)', replacement: 'lodash-es' }];\n\nexport const mergeConfigItems = (type: any, ...configItemsToMerge: any[]) => {\n  const mergedItems: any[] = [];\n\n  configItemsToMerge.forEach((configItemToMerge) => {\n    configItemToMerge.forEach((item: any) => {\n      const itemToMergeWithIndex = mergedItems.findIndex(\n        (mergedItem) => mergedItem.file.resolved === item.file.resolved\n      );\n\n      if (itemToMergeWithIndex === -1) {\n        mergedItems.push(item);\n        return;\n      }\n\n      mergedItems[itemToMergeWithIndex] = createConfigItem(\n        [\n          mergedItems[itemToMergeWithIndex].file.resolved,\n          merge(mergedItems[itemToMergeWithIndex].options, item.options),\n        ],\n        {\n          type,\n        }\n      );\n    });\n  });\n\n  return mergedItems;\n};\n\nexport const createConfigItems = (type: any, items: any[]) => {\n  return items.map(({ name, ...options }) => {\n    return createConfigItem([require.resolve(name), options], { type });\n  });\n};\n\nexport const babelPluginExportTs = createBabelInputPluginFactory(() => ({\n  // Passed the plugin options.\n  options({ custom: customOptions, ...pluginOptions }: any) {\n    return {\n      // Pull out any custom options that the plugin might have.\n      customOptions,\n\n      // Pass the options back with the two custom options removed.\n      pluginOptions,\n    };\n  },\n  config(config: any, { customOptions }: any) {\n    const defaultPlugins = createConfigItems(\n      'plugin',\n      [\n        // {\n        //   name: '@babel/plugin-transform-react-jsx',\n        //   pragma: customOptions.jsx || 'h',\n        //   pragmaFrag: customOptions.jsxFragment || 'Fragment',\n        // },\n        { name: 'babel-plugin-macros' },\n        { name: 'babel-plugin-annotate-pure-calls' },\n        { name: 'babel-plugin-dev-expression' },\n        customOptions.format !== 'cjs' && {\n          name: 'babel-plugin-transform-rename-import',\n          replacements,\n        },\n        {\n          name: 'babel-plugin-polyfill-regenerator',\n          // don't pollute global env as this is being used in a library\n          method: 'usage-pure',\n        },\n        {\n          name: '@babel/plugin-proposal-class-properties',\n          loose: true,\n        },\n        isTruthy(customOptions.extractErrors) && {\n          name: './errors/transformErrorMessages',\n        },\n      ].filter(Boolean)\n    );\n\n    const babelOptions = config.options || {};\n    babelOptions.presets = babelOptions.presets || [];\n\n    const presetEnvIdx = babelOptions.presets.findIndex((preset: any) =>\n      preset.file.request.includes('@babel/preset-env')\n    );\n\n    // if they use preset-env, merge their options with ours\n    if (presetEnvIdx !== -1) {\n      const presetEnv = babelOptions.presets[presetEnvIdx];\n      babelOptions.presets[presetEnvIdx] = createConfigItem(\n        [\n          presetEnv.file.resolved,\n          merge(\n            {\n              loose: true,\n              targets: customOptions.targets,\n            },\n            presetEnv.options,\n            {\n              modules: false,\n            }\n          ),\n        ],\n        {\n          type: `preset`,\n        }\n      );\n    } else {\n      // if no preset-env, add it & merge with their presets\n      const defaultPresets = createConfigItems('preset', [\n        {\n          name: '@babel/preset-env',\n          targets: customOptions.targets,\n          modules: false,\n          loose: true,\n        },\n      ]);\n\n      babelOptions.presets = mergeConfigItems(\n        'preset',\n        defaultPresets,\n        babelOptions.presets\n      );\n    }\n\n    // Merge babelrc & our plugins together\n    babelOptions.plugins = mergeConfigItems(\n      'plugin',\n      defaultPlugins,\n      babelOptions.plugins || []\n    );\n\n    return babelOptions;\n  },\n}));\n"],"names":["isTruthy","obj","constructor","Object","keys","length","replacements","original","replacement","mergeConfigItems","type","configItemsToMerge","mergedItems","forEach","configItemToMerge","item","itemToMergeWithIndex","findIndex","mergedItem","file","resolved","createConfigItem","merge","options","push","createConfigItems","items","map","name","require","resolve","babelPluginExportTs","createBabelInputPluginFactory","custom","customOptions","pluginOptions","config","defaultPlugins","format","method","loose","extractErrors","filter","Boolean","babelOptions","presets","presetEnvIdx","preset","request","includes","presetEnv","targets","modules","defaultPresets","plugins"],"mappings":"oPAQaA,EAAYC,KAClBA,IAIEA,EAAIC,cAAgBC,QAAUA,OAAOC,KAAKH,GAAKI,OAAS,GAI3DC,EAAe,CAAC,CAAEC,SAAU,gBAAiBC,YAAa,cAEnDC,EAAmB,CAACC,KAAcC,KAC7C,MAAMC,EAAqB,GAyB3B,OAvBAD,EAAmBE,SAASC,IAC1BA,EAAkBD,SAASE,IACzB,MAAMC,EAAuBJ,EAAYK,WACtCC,GAAeA,EAAWC,KAAKC,WAAaL,EAAKI,KAAKC,YAG3B,IAA1BJ,EAKJJ,EAAYI,GAAwBK,mBAClC,CACET,EAAYI,GAAsBG,KAAKC,SACvCE,UAAMV,EAAYI,GAAsBO,QAASR,EAAKQ,UAExD,CACEb,KAAAA,IAVFE,EAAYY,KAAKT,SAgBhBH,GAGIa,EAAoB,CAACf,EAAWgB,IACpCA,EAAMC,KAAI,EAAGC,KAAAA,KAASL,KACpBF,mBAAiB,CAACQ,QAAQC,QAAQF,GAAOL,GAAU,CAAEb,KAAAA,MAInDqB,EAAsBC,iCAA8B,MAE/DT,QAAO,EAAGU,OAAQC,KAAkBC,MAC3B,CAELD,cAAAA,EAGAC,cAAAA,IAGJC,OAAOA,GAAaF,cAAEA,IACpB,MAAMG,EAAiBZ,EACrB,SACA,CAME,CAAEG,KAAM,uBACR,CAAEA,KAAM,oCACR,CAAEA,KAAM,+BACiB,QAAzBM,EAAcI,QAAoB,CAChCV,KAAM,uCACNtB,aAAAA,GAEF,CACEsB,KAAM,oCAENW,OAAQ,cAEV,CACEX,KAAM,0CACNY,OAAO,GAETxC,EAASkC,EAAcO,gBAAkB,CACvCb,KAAM,oCAERc,OAAOC,UAGLC,EAAeR,EAAOb,SAAW,GACvCqB,EAAaC,QAAUD,EAAaC,SAAW,GAE/C,MAAMC,EAAeF,EAAaC,QAAQ5B,WAAW8B,GACnDA,EAAO5B,KAAK6B,QAAQC,SAAS,uBAI/B,IAAsB,IAAlBH,EAAqB,CACvB,MAAMI,EAAYN,EAAaC,QAAQC,GACvCF,EAAaC,QAAQC,GAAgBzB,mBACnC,CACE6B,EAAU/B,KAAKC,SACfE,UACE,CACEkB,OAAO,EACPW,QAASjB,EAAciB,SAEzBD,EAAU3B,QACV,CACE6B,SAAS,KAIf,CACE1C,KAAM,eAGL,CAEL,MAAM2C,EAAiB5B,EAAkB,SAAU,CACjD,CACEG,KAAM,oBACNuB,QAASjB,EAAciB,QACvBC,SAAS,EACTZ,OAAO,KAIXI,EAAaC,QAAUpC,EACrB,SACA4C,EACAT,EAAaC,SAWjB,OANAD,EAAaU,QAAU7C,EACrB,SACA4B,EACAO,EAAaU,SAAW,IAGnBV"}