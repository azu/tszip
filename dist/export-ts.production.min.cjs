"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("sade/lib/index.js"),t=require("glob-promise/lib/index.js"),r=require("rollup"),s=require("chalk/source/index.js"),n=require("jest"),o=require("eslint/lib/api.js"),a=require("path"),i=require("execa/index.js"),l=require("shelljs/shell.js"),c=require("ora/index.js"),u=require("semver/index.js"),p=require("fs-extra/lib/index.js"),d=require("camelcase/index.js");require("ansi-escapes/index.js");var f=require("jpjs/dist/jpjs.js"),m=require("resolve.exports"),g=require("rollup-plugin-terser"),y=require("@babel/core/lib/index.js"),h=require("@rollup/plugin-commonjs/dist/index.js"),x=require("@rollup/plugin-json/dist/index.js"),w=require("@rollup/plugin-node-resolve"),b=require("rollup-plugin-sourcemaps"),j=require("rollup-plugin-typescript2/dist/rollup-plugin-typescript2.cjs.js"),v=require("typescript/lib/typescript.js"),E=require("@babel/parser/lib/index.js"),k=require("@babel/traverse/lib/index.js"),$=require("pascal-case/dist/index.js"),S=require("@rollup/plugin-babel/dist/index.js"),q=require("lodash.merge"),C=require("@optimize-lodash/rollup-plugin/dist/index.js"),F=require("fs"),O=require("enquirer/lib/prompts/input.js"),D=require("enquirer/lib/prompts/select.js"),J=require("progress-estimator/src/index.js"),P=require("fs/promises");function I(e){return e&&"object"==typeof e&&"default"in e?e:{"default":e}}function R(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var s=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,t}require("@babel/helper-module-imports/lib/index.js");var _=I(e),M=I(t),N=I(s),T=I(n),z=I(a),L=I(i),A=I(l),B=I(c),U=I(u),W=I(p),Y=R(p),V=I(d),Z=I(m),K=I(h),G=I(x),H=I(w),Q=I(b),X=I(j),ee=I(v),te=I(k),re=I(q),se=I(O),ne=I(D),oe=I(J);const ae=console.error.bind(console);function ie(e){const t=e.error||e,r=`${t.name?t.name+": ":""}${t.message||t}`,s=t.plugin?"rpt2"===t.plugin?`(typescript) ${r}`:`(${t.plugin} plugin) ${r}`:r;if(ae(N.default.bold.red(s)),t.loc&&(ae(),ae(`at ${t.loc.file}:${t.loc.line}:${t.loc.column}`)),t.frame)ae(),ae(N.default.dim(t.frame));else if(e.stack){const e=t.stack.replace(s,"");ae(N.default.dim(e))}ae()}const le=e=>V.default((e=>e.replace(/^@.*\//,""))(e).toLowerCase().replace(/((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,"")),ce=e=>e.toLowerCase().replace(/(^@.*\/)|((^[^a-zA-Z]+)|[^\w.-])|([^a-zA-Z0-9]+$)/g,""),ue=W.default.realpathSync(process.cwd()),pe=function(e){return z.default.resolve(ue,e)},de={appPackageJson:pe("package.json"),tsconfigJson:pe("tsconfig.json"),testsSetup:pe("test/setupTests.ts"),appRoot:pe("."),appSrc:pe("src"),appErrorsJson:pe("errors/codes.json"),appErrors:pe("errors"),appDist:pe("dist"),appConfig:pe("export-ts.config.js"),jestConfig:pe("jest.config.js"),progressEstimatorCache:pe("node_modules/.cache/.progress-estimator")};let fe;async function me(){if(fe)return fe;try{await L.default("yarnpkg",["--version"]),fe="yarn"}catch(e){fe="npm"}return fe}const ge=e=>N.default.bold(N.default.cyan(e)),ye=async function(e){const t=await me(),r={install:"npm"===t?"npm install":"yarn install",build:"npm"===t?"npm run build":"yarn build",start:"npm"===t?"npm run start":"yarn start",test:"npm"===t?"npm test":"yarn test"};return`\n  ${N.default.green("Awesome!")} You're now ready to start coding.\n  \n  I already ran ${ge(r.install)} for you, so your next steps are:\n    ${ge(`cd ${e}`)}\n  \n  To start developing (rebuilds on changes):\n    ${ge(r.start)}\n  \n  To build for production:\n    ${ge(r.build)}\n\n  To test your library with Jest:\n    ${ge(r.test)}\n    \n  Questions? Feedback? Please let me know!\n  ${N.default.green("https://github.com/ctjlewis/export-ts/issues")}\n`};function he(e){const t={},r=Object.keys(e);for(const s of r)t[e[s]]=s;return t}function xe(e){switch(e.type){case"StringLiteral":case"Literal":return e.value;case"BinaryExpression":if("+"!==e.operator)throw new Error("Unsupported binary operator "+e.operator);return xe(e.left)+xe(e.right);default:throw new Error("Unsupported type "+e.type)}}const we={sourceType:"module",plugins:["classProperties","flow","jsx","trailingFunctionCommas","objectRestSpread"]};async function be(e){if(!e||!e.errorMapFilePath)throw new Error("Missing options. Ensure you pass an object with `errorMapFilePath`.");if(!e.name||!e.name)throw new Error("Missing options. Ensure you pass --name flag to export-ts");const t=e.errorMapFilePath;let r;try{const e=await W.default.readFile(t,"utf-8");r=JSON.parse(e)}catch(e){r={}}const s=Object.keys(r);let n;function o(e){const t=E.parse(e,we);te.default(t,{CallExpression:{exit(e){var t;e.get("callee").isIdentifier({name:"invariant"})&&(t=xe(e.node.arguments[1]),r.hasOwnProperty(t)||(r[t]=""+n++))}}})}return n=0===s.length?0:Math.max.apply(null,s)+1,r=he(r),async function(s){o(s),await async function(){const s=$.pascalCase(le(e.name));await W.default.ensureDir(de.appErrors),await W.default.writeFile(t,JSON.stringify(he(r),null,2)+"\n","utf-8"),await W.default.writeFile(de.appErrors+"/ErrorDev.js","\nfunction ErrorDev(message) {\n  const error = new Error(message);\n  error.name = 'Invariant Violation';\n  return error;\n}\n\nexport default ErrorDev;\n      ","utf-8"),await W.default.writeFile(de.appErrors+"/ErrorProd.js",`\nfunction ErrorProd(code) {\n  // TODO: replace this URL with yours\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return new Error(\n    \`Minified ${s} error #\${code}; visit \${url} for the full message or \` +\n      'use the non-minified dev environment for full errors and additional ' +\n      'helpful warnings. '\n  );\n}\n\nexport default ErrorProd;\n`,"utf-8")}()}}const je=[{original:"lodash(?!/fp)",replacement:"lodash-es"}],ve=(e,...t)=>{const r=[];return t.forEach((t=>{t.forEach((t=>{const s=r.findIndex((e=>e.file.resolved===t.file.resolved));-1!==s?r[s]=y.createConfigItem([r[s].file.resolved,re.default(r[s].options,t.options)],{type:e}):r.push(t)}))})),r},Ee=(e,t)=>t.map((({name:t,...r})=>y.createConfigItem([require.resolve(t),r],{type:e}))),ke=S.createBabelInputPluginFactory((()=>({options:({custom:e,...t})=>({customOptions:e,pluginOptions:t}),config(e,{customOptions:t}){const r=Ee("plugin",[{name:"babel-plugin-macros"},{name:"babel-plugin-annotate-pure-calls"},{name:"babel-plugin-dev-expression"},"cjs"!==t.format&&{name:"babel-plugin-transform-rename-import",replacements:je},{name:"babel-plugin-polyfill-regenerator",method:"usage-pure"},{name:"@babel/plugin-proposal-class-properties",loose:!0},(s=t.extractErrors,!!s&&(s.constructor!==Object||Object.keys(s).length>0)&&{name:"./errors/transformErrorMessages"})].filter(Boolean));var s;const n=e.options||{};n.presets=n.presets||[];const o=n.presets.findIndex((e=>e.file.request.includes("@babel/preset-env")));if(-1!==o){const e=n.presets[o];n.presets[o]=y.createConfigItem([e.file.resolved,re.default({loose:!0,targets:t.targets},e.options,{modules:!1})],{type:"preset"})}else{const e=Ee("preset",[{name:"@babel/preset-env",targets:t.targets,modules:!1,loose:!0}]);n.presets=ve("preset",e,n.presets)}return n.plugins=ve("plugin",r,n.plugins||[]),n}})));function $e(e){const t=e.split("node_modules"),r=t[0];if(t.length<2)return null;const s=t[1].split(a.sep),n=s[1].startsWith("@")?s.slice(1,3).join(a.sep):s[1];return a.resolve(r,"node_modules",n,"package.json")}const Se=["react","react-native"],qe={errorMapFilePath:de.appErrorsJson};let Ce={rollup:(e,t)=>e};async function Fe(e){const t=f.concatAllArray(e.input.map((t=>function(e,t){return[e.format.includes("cjs")&&{...e,format:"cjs",env:"development",input:t},e.format.includes("cjs")&&{...e,format:"cjs",env:"production",input:t},e.format.includes("esm")&&{...e,format:"esm",input:t},e.format.includes("umd")&&{...e,format:"umd",env:"development",input:t},e.format.includes("umd")&&{...e,format:"umd",env:"production",input:t},e.format.includes("system")&&{...e,format:"system",env:"development",input:t},e.format.includes("system")&&{...e,format:"system",env:"production",input:t}].filter(Boolean)}(e,t).map(((e,t)=>({...e,writeMeta:0===t}))))));return await Promise.all(t.map((async(e,t)=>{const r=await async function(e,t){const r=await be({...qe,...e}),s=e.format.includes("es")||e.format.includes("esm"),n=void 0!==e.minify?e.minify:"production"===e.env||s;let o=["esm","cjs"].includes(e.format)?"":e.format,i="esm"===e.format?"mjs":"cjs";const l=[`${de.appDist}/${ce(e.name)}`,o,e.env,n?"min":"",i].filter(Boolean).join("."),c=ee.default.readConfigFile(e.tsconfig||de.tsconfigJson,ee.default.sys.readFile).config,u=ee.default.parseJsonConfigFileContent(c,ee.default.sys,"./").options,p="production"==="development",d=["esm"===e.format?".mjs":null,"cjs"===e.format?".cjs":null,".js"].filter(Boolean);return{input:e.input,external:e=>!e.startsWith("regenerator-runtime")&&(!!Se.includes(e)||(e=>!e.startsWith(".")&&!z.default.isAbsolute(e))(e)),shimMissingExports:!0,treeshake:{propertyReadSideEffects:!1},output:{file:l,format:s?"es":e.format,freeze:!1,esModule:Boolean(u?.esModuleInterop)||s,name:e.name||le(e.name),sourcemap:!0,globals:{react:"React","react-native":"ReactNative","lodash-es":"lodashEs","lodash/fp":"lodashFp"},exports:"named"},plugins:[e.extractErrors&&{name:"Extract errors",async transform(e){try{await r(e)}catch(e){return null}return{code:e,map:null}}},H.default({modulesOnly:!0,browser:"node"!==e.target,extensions:[".jsx",".json",".node"]}),K.default({extensions:[".js",".cjs",".mjs"],esmExternals:!0,requireReturnsDefault:!0,transformMixedEsModules:!0,include:"umd"===e.format||s?/\/node_modules\//:/\/regenerator-runtime\//}),G.default(),{name:"Remove shebang",transform:e=>({code:e=e.replace(/^#!(.*)/,""),map:null})},X.default({typescript:ee.default,tsconfig:e.tsconfig,tsconfigDefaults:{exclude:["**/*.spec.ts","**/*.test.ts","**/*.spec.tsx","**/*.test.tsx","node_modules","bower_components","jspm_packages",de.appDist],compilerOptions:{sourceMap:!0,declaration:!0,jsx:"react"}},tsconfigOverride:{compilerOptions:{module:"esnext",target:"esnext",...t>0?{declaration:!1,declarationMap:!1}:{}}},check:!e.transpileOnly&&0===t,useTsconfigDeclarationDir:Boolean(u?.declarationDir)}),e.legacy&&ke({exclude:"node_modules/**",extensions:[...y.DEFAULT_EXTENSIONS,"ts","tsx"],passPerPreset:!0,custom:{targets:{..."node"===e.target?{node:14}:{},esmodules:s},extractErrors:e.extractErrors,format:e.format},babelHelpers:"bundled"}),Q.default(),n&&g.terser({format:{keep_quoted_props:!0,comments:!1},compress:{keep_infinity:!0,pure_getters:!0,passes:10},ecma:e.legacy?5:2020,module:s,toplevel:"cjs"===e.format||s}),C.optimizeLodashImports({useLodashEs:s||void 0}),e.env&&{name:"Ensure default exports",renderChunk:async(e,t)=>({code:e.replace(/process\.env\.NODE_ENV(?!\s*=)/g,JSON.stringify(p?"production":"development")),map:null})},!e.legacy&&C.optimizeLodashImports({useLodashEs:s||void 0}),{name:"Resolve final runtime imports to files",renderChunk:async(t,r)=>{for(const s of r.imports){if(a.extname(s))continue;let r=require.resolve(s);const n=a.extname(r),o=r.replace(n,"");if("esm"===e.format||"cjs"===e.format)for(const e of d){const t=o+e;if(F.existsSync(t)){r=t;break}}const i=$e(r);if(!i||!F.existsSync(i))continue;const l=F.readFileSync(i,"utf-8"),c=JSON.parse(l);if(Z.default.resolve(c,s))continue;const u=r.slice(r.indexOf(s)),p=new RegExp(`(from|require\\()\\s*['"]${s.replace(".","\\.")}['"]`,"g"),f=t.match(p)??[];for(const e of f){const r=e.replace(s,u);t=t.replace(e,r)}}return{code:t,map:null}}},{name:"Ensure default exports",renderChunk:async(e,t)=>t.exports.includes("default")||!s?null:{code:`${e}\nexport default {};`,map:null}}]}}(e,t);return Ce.rollup(r,e)})))}async function Oe(){return await W.default.ensureDir(de.progressEstimatorCache),oe.default({storagePath:de.progressEstimatorCache})}F.existsSync(de.appConfig)&&(Ce=require(de.appConfig));const De={name:"basic",dependencies:["husky","export-ts","tslib","typescript","size-limit","@size-limit/preset-small-lib"],packageJson:{version:"0.1.0",license:"MIT",main:"./dist/index.cjs",module:"./dist/index.mjs",exports:{"./package.json":"./package.json",".":{import:"./dist/index.mjs",require:"./dist/index.cjs"}},typings:"dist/index.d.ts",files:["dist","src"],engines:{node:">=14"},scripts:{start:"export-ts watch",build:"export-ts build",test:"export-ts test",posttest:"node test/import.mjs && node test/require.cjs",lint:"export-ts lint",prepare:"export-ts build",size:"size-limit",analyze:"size-limit --why"},peerDependencies:{},husky:{hooks:{"pre-commit":"export-ts lint"}},prettier:{printWidth:80,semi:!0,singleQuote:!0,trailingComma:"es5"}}},Je={name:"react",dependencies:[...De.dependencies,"@types/react","@types/react-dom","react","react-dom"],packageJson:{...De.packageJson,peerDependencies:{react:">=16"},scripts:{...De.packageJson.scripts,test:"export-ts test"}}},Pe={basic:De,react:Je,"react-with-storybook":{dependencies:[...Je.dependencies,"@babel/core","@storybook/addon-essentials","@storybook/addon-links","@storybook/addon-info","@storybook/addons","@storybook/react","react-is","babel-loader"],name:"react-with-storybook",packageJson:{...Je.packageJson,scripts:{...Je.packageJson.scripts,storybook:"start-storybook -p 6006","build-storybook":"build-storybook"}}}},Ie=_.default("export-ts");let Re;try{Re=JSON.parse(F.readFileSync(de.appPackageJson,"utf-8"))}catch(e){}const _e=e=>P.stat(e).then((e=>e.isDirectory())).catch((()=>!1)),Me=e=>P.stat(e).then((e=>e.isFile())).catch((()=>!1));async function Ne(e,t){let r=[];if(e)Array.isArray(e)?r.push(...e):r.push(e);else if(t){const e=pe(t);r.push(e)}else if(await _e(pe("src"))){const e=await async function(e){const t=await Me(pe("src/index.ts"))?".ts":await Me(pe("src/index.tsx"))?".tsx":await Me(pe("src/index.jsx"))?".jsx":".js";return pe(`src/index${t}`)}();r.push(e)}const s=r.map((async e=>await M.default(e)));return(await Promise.all(s)).flat()}async function Te(e){return{...e,name:e.name||Re.name,input:await Ne(e.entry,Re.source),format:e.format.split(",").map((e=>"es"===e?"esm":e))}}async function ze(){const e=await Oe(),t=await M.default(`${de.appDist}/**/*.js`);await e(Promise.all(t.map((async e=>await W.default.unlink(e)))),"Removing original emitted TypeScript output (dist/**/*.js).")}async function Le(){await W.default.remove(de.appDist)}function Ae(e){const t=`#!/usr/bin/env node\n\n'use strict';\nmodule.exports = require('./${ce(e)}.production.min.cjs');\n`;return W.default.outputFile(z.default.join(de.appDist,"index.cjs"),t)}function Be(e){const t=`#!/usr/bin/env node\n\nexport { default } from './${e}.min.mjs';\nexport * from './${e}.min.mjs';\n`;return W.default.outputFile(z.default.join(de.appDist,"index.mjs"),t)}function Ue(e){A.default.exec(`npm config set init-author-name "${e}"`,{silent:!0})}Ie.command("create <pkg>").describe("Create a new package with ").example("create mypackage").option("--template",`Specify a template. Allowed choices: [${Object.keys(Pe).join(", ")}]`).example("create --template react mypackage").action((async(e,t)=>{console.log(N.default.blue("\n::::::::::: ::::::::  :::::::::  :::    :::\n    :+:    :+:    :+: :+:    :+: :+:    :+:\n    +:+    +:+        +:+    +:+  +:+  +:+\n    +#+    +#++:++#++ +#+    +:+   +#++:+\n    +#+           +#+ +#+    +#+  +#+  +#+\n    #+#    #+#    #+# #+#    #+# #+#    #+#\n    ###     ########  #########  ###    ###\n"));const r=B.default(`Creating ${N.default.bold.green(e)}...`);let s;try{const o=await W.default.realpath(process.cwd());let a=await async function t(s){if(!await W.default.pathExists(s))return s;r.fail(`Failed to create ${N.default.bold.red(e)}`);const n=new se.default({message:`A folder named ${N.default.bold.red(e)} already exists! ${N.default.bold("Choose a different name")}`,initial:e+"-1",result:e=>e.trim()});return e=await n.run(),s=await W.default.realpath(process.cwd())+"/"+e,r.start(`Creating ${N.default.bold.green(e)}...`),await t(s)}(o+"/"+e);const i=new ne.default({message:"Choose a template",choices:Object.keys(Pe)});t.template?(s=t.template.trim(),i.choices.includes(s)||(r.fail(`Invalid template ${N.default.bold.red(s)}`),s=await i.run())):s=await i.run(),r.start(),await W.default.copy(z.default.resolve(__dirname,`../templates/${s}`),a,{overwrite:!0}),await W.default.move(z.default.resolve(a,"./gitignore"),z.default.resolve(a,"./.gitignore"));let l=await W.default.readFile(z.default.resolve(a,"LICENSE"),{encoding:"utf-8"});l=l.replace(/<year>/,`${(new Date).getFullYear()}`);let c=function(){let e="";return e=A.default.exec("npm config get init-author-name",{silent:!0}).stdout.trim(),e||(e=A.default.exec("git config --global user.name",{silent:!0}).stdout.trim(),e?(Ue(e),e):(e=A.default.exec("npm config get init-author-email",{silent:!0}).stdout.trim(),e||(e=A.default.exec("git config --global user.email",{silent:!0}).stdout.trim(),e||e)))}();if(!c){r.stop();const e=new se.default({name:"author",message:"Who is the package author?"});c=await e.run(),Ue(c),r.start()}l=l.replace(/<author>/,c.trim()),await W.default.writeFile(z.default.resolve(a,"LICENSE"),l,{encoding:"utf-8"});const u=(e=>({name:t,author:r})=>({...e.packageJson,name:t,author:r,"size-limit":[{path:`dist/${t}.production.min.cjs`,limit:"10 KB"},{path:`dist/${t}.min.mjs`,limit:"10 KB"}]}))(Pe[s]);process.chdir(a);const p=u({name:ce(e),author:c}),d=function({engines:e}){return e&&e.node}(p);d&&!U.default.satisfies(process.version,d)&&(r.fail((n=d,`Unsupported Node version! Your current Node version (${N.default.red(process.version)}) does not satisfy the requirement of Node ${N.default.cyan(n)}.`)),process.exit(1)),await W.default.outputJSON(z.default.resolve(a,"package.json"),p),r.succeed(`Created ${N.default.bold.green(e)}`),await ye(e)}catch(t){r.fail(`Failed to create ${N.default.bold.red(e)}`),ie(t),process.exit(1)}var n;const o=Pe[s],{dependencies:a}=o,i=B.default((l=a.sort(),`Installing dependencies:\n\n${l.map((e=>((e,t=1)=>`${" ".repeat(2*t)}${e}`)(`${N.default.cyan(N.default.bold(e))}`,2))).join("\n")}\n\n`)).start();var l;try{const t=await me();await L.default(t,function(e,t){switch(e){case"npm":return["install",...t,"--save-dev"];case"yarn":return["add",...t,"--dev"]}}(t,a)),i.succeed("Installed dependencies"),console.log(await ye(e))}catch(e){i.fail("Failed to install dependencies"),ie(e),process.exit(1)}})),Ie.command("watch").describe("Rebuilds on any change").option("--entry, -i","Entry module").example("watch --entry src/foo.tsx").option("--target","Specify your target environment","browser").example("watch --target node").option("--name","Specify name exposed in UMD builds").example("watch --name Foo").option("--format","Specify module format(s)","cjs,esm").example("watch --format cjs,esm").option("--verbose","Keep outdated console output in watch mode instead of clearing the screen").example("watch --verbose").option("--noClean","Don't clean the dist folder").example("watch --noClean").option("--tsconfig","Specify custom tsconfig path").example("watch --tsconfig ./tsconfig.foo.json").option("--onFirstSuccess","Run a command on the first successful build").example('watch --onFirstSuccess "echo The first successful build!"').option("--onSuccess","Run a command on a successful build").example('watch --onSuccess "echo Successful build!"').option("--onFailure","Run a command on a failed build").example('watch --onFailure "The build failed!"').option("--transpileOnly","Skip type checking").example("watch --transpileOnly").option("--extractErrors","Extract invariant errors to ./errors/codes.json.").example("watch --extractErrors").action((async e=>{const t=await Te(e),s=await Fe(t);t.noClean||await Le(),t.format.includes("cjs")&&await Ae(t.name),t.format.includes("esm")&&await Be(t.name),await ze();let n=!0,o=null,a=null;function i(e){if(!e)return null;const[t,...r]=e.split(" ");return L.default(t,r,{stdio:"inherit"})}const l=B.default().start();r.watch(s.map((e=>({watch:{silent:!0,include:["src/**"],exclude:["node_modules/**"]},...e})))).on("event",(async e=>{if(await Promise.all([o?o.kill("SIGTERM"):null,a?a.kill("SIGTERM"):null]),"START"===e.code&&(t.verbose||process.stdout.write("win32"===process.platform?"[2J[0f":"[2J[3J[H"),l.start(N.default.bold.cyan("Compiling modules..."))),"ERROR"===e.code&&(l.fail(N.default.bold.red("Failed to compile")),ie(e.error),a=i(t.onFailure)),"END"===e.code){l.succeed(N.default.bold.green("Compiled successfully")),console.log(`\n  ${N.default.dim("Watching for changes")}\n`);try{await async function(){const e=de.appDist+"/src";await Y.pathExists(e)&&(console.warn('[export-ts]: Your rootDir is currently set to "./". Please change your rootDir to "./src".\nexport-ts has deprecated setting tsconfig.compilerOptions.rootDir to "./" as it caused buggy output for declarationMaps and more.\nYou may also need to change your include to remove "test", which also caused declarations to be unnecessarily created for test files.'),await Y.copy(e,de.appDist,{overwrite:!0}),await Y.remove(e))}(),n&&t.onFirstSuccess?(n=!1,i(t.onFirstSuccess)):o=i(t.onSuccess)}catch(e){}}}))})),Ie.command("build").describe("Build your project once and exit").option("--entry, -i","Entry module").example("build --entry src/foo.tsx").option("--target","Specify your target environment","browser").example("build --target node").option("--name","Specify name exposed in UMD builds").example("build --name Foo").option("--format","Specify module format(s)","cjs,esm").example("build --format cjs,esm").option("--legacy","Babel transpile and emit ES5.").example("build --legacy").option("--tsconfig","Specify custom tsconfig path").example("build --tsconfig ./tsconfig.foo.json").option("--transpileOnly","Skip type checking").example("build --transpileOnly").option("--extractErrors","Extract errors to ./errors/codes.json and provide a url for decoding.").example("build --extractErrors=https://reactjs.org/docs/error-decoder.html?invariant=").action((async e=>{const t=await Te(e),s=await Fe(t);console.log("> Cleaning dist/."),await Le();const n=await Oe();t.format.includes("cjs")&&await n(Ae(t.name).catch(ie),"Creating CJS entry file"),t.format.includes("esm")&&await n(Be(t.name).catch(ie),"Creating MJS entry file");try{await n(Promise.all(s.map((async e=>{const t=await r.rollup(e);await t.write(e.output)}))),"JS ➡ JS: Compressing and transforming emitted TypeScript output."),await ze()}catch(e){ie(e),process.exit(1)}})),Ie.command("test").describe("Run jest test runner. Passes through all flags directly to Jest").action((async e=>{process.env.BABEL_ENV="test",process.env.NODE_ENV="test",process.on("unhandledRejection",(e=>{throw e}));const t=process.argv.slice(2);let r={...(s=e.config?z.default.dirname(e.config):de.appRoot,{transform:{".(ts|tsx)$":require.resolve("ts-jest/dist"),".(js|jsx)$":require.resolve("babel-jest")},transformIgnorePatterns:["[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"],moduleFileExtensions:["ts","tsx","js","jsx","json","node"],collectCoverageFrom:["src/**/*.{ts,tsx,js,jsx}"],testMatch:["<rootDir>/**/*.(spec|test).{ts,tsx,js,jsx}"],testURL:"http://localhost",rootDir:s,watchPlugins:[require.resolve("jest-watch-typeahead/filename"),require.resolve("jest-watch-typeahead/testname")]}),...Re.jest};var s;const n=await W.default.pathExists(de.jestConfig);if(e.config||n){const t=pe(e.config||de.jestConfig),s=require(t);r={...r,...s}}if(e.config){let e=t.indexOf("--config");if(-1!==e)t.splice(e,2);else{const r=/--config=.+/;e=t.findIndex((e=>e.match(r))),-1!==e&&t.splice(e,1)}}t.push("--config",JSON.stringify({...r}));const[,...o]=t;T.default.run(o)})),Ie.command("lint").describe("Run eslint with Prettier").example("lint src test").option("--fix","Fixes fixable errors and warnings").example("lint src test --fix").option("--ignore-pattern","Ignore a pattern").example("lint src test --ignore-pattern test/foobar.ts").option("--max-warnings","Exits with non-zero error code if number of warnings exceed this number",Infinity).example("lint src test --max-warnings 10").option("--write-file","Write the config file locally").example("lint --write-file").option("--report-file","Write JSON report to file locally").example("lint --report-file eslint-report.json").action((async e=>{if(0===e._.length&&!e["write-file"]){const t=["src","test"].filter(W.default.existsSync);e._=t,console.log(N.default.yellow(`Defaulting to "export-ts lint ${t.join(" ")}"`,'\nYou can override this in the package.json scripts, like "lint": "export-ts lint src otherDir"'))}const t=await async function({pkg:e,rootDir:t,writeFile:r}){const s={extends:["react-app","prettier/@typescript-eslint","plugin:prettier/recommended"],settings:{react:{version:Boolean(function({dependencies:e,devDependencies:t}){return e&&e.react||t&&t.react}(e))?"detect":"999.999.999"}}};if(!r)return s;const n=z.default.join(t,".eslintrc.js");try{await W.default.writeFile(n,`module.exports = ${JSON.stringify(s,null,2)}`,{flag:"wx"})}catch(e){return"EEXIST"===e.code?console.error("Error trying to save the Eslint configuration file:",`${n} already exists.`):console.error(e),s}}({pkg:Re,rootDir:de.appRoot,writeFile:e["write-file"]}),r=new o.CLIEngine({baseConfig:{...t,...Re.eslint},extensions:[".ts",".tsx",".js",".jsx"],fix:e.fix,ignorePattern:e["ignore-pattern"]}),s=r.executeOnFiles(e._);e.fix&&o.CLIEngine.outputFixes(s),console.log(r.getFormatter()(s.results)),e["report-file"]&&await W.default.outputFile(e["report-file"],r.getFormatter("json")(s.results)),s.errorCount&&process.exit(1),s.warningCount>e["max-warnings"]&&process.exit(1)})),Ie.parse(process.argv),exports.isDir=_e,exports.isFile=Me;
//# sourceMappingURL=export-ts.production.min.cjs.map
